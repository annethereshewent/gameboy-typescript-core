"use strict";define("cartridge/Cartridge",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Cartridge=void 0;class o{gameDataView;gameBytes;constructor(r){this.gameDataView=r,this.gameBytes=new Uint8Array(r.buffer)}readByte(r){return this.gameDataView.getUint8(r)}readWord(r){return this.gameDataView.getUint16(r,!0)}readSignedByte(r){return this.gameDataView.getInt8(r)}writeByte(r,n){}writeWord(r,n){}isGameboyColor(){const r=this.gameDataView.getUint8(323);return[128,192].includes(r)}get romSize(){const n=this.gameDataView.getUint8(328);return[32768,65536,131072,262144,524288,1048576,2097152,4194304,8388608][n]}get name(){return new TextDecoder().decode(this.gameBytes.subarray(308,323))}get type(){return this.gameDataView.getUint8(327)}get ramSize(){const n=this.gameDataView.getUint8(329);return[0,-1,8192,32768,131072,65536][n]}}s.Cartridge=o}),define("cartridge/CartridgeType",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.CartridgeType=void 0;var o;(function(t){t[t.ROM=0]="ROM",t[t.MBC1=1]="MBC1",t[t.MBC1_PLUS_RAM=2]="MBC1_PLUS_RAM",t[t.MBC1_PLUS_RAM_PLUS_BATTERY=3]="MBC1_PLUS_RAM_PLUS_BATTERY",t[t.MBC2=5]="MBC2",t[t.MBC2_PLUS_BATTERY=6]="MBC2_PLUS_BATTERY",t[t.ROM_PLUS_RAM=8]="ROM_PLUS_RAM",t[t.ROM_PLUS_RAM_PLUS_BATTERY=9]="ROM_PLUS_RAM_PLUS_BATTERY",t[t.MM01=11]="MM01",t[t.MM01_PLUS_RAM=12]="MM01_PLUS_RAM",t[t.MMO1_PLUS_RAM_PLUS_BATTERY=13]="MMO1_PLUS_RAM_PLUS_BATTERY",t[t.MBC3_PLUS_TIMER_PLUS_BATTERY=15]="MBC3_PLUS_TIMER_PLUS_BATTERY",t[t.MBC3_PLUS_TIMER_PLUS_RAM_PLUS_BATTERY=16]="MBC3_PLUS_TIMER_PLUS_RAM_PLUS_BATTERY",t[t.MBC3=17]="MBC3",t[t.MBC3_PLUS_RAM=18]="MBC3_PLUS_RAM",t[t.MBC3_PLUS_RAM_PLUS_BATTERY=19]="MBC3_PLUS_RAM_PLUS_BATTERY",t[t.MBC5=25]="MBC5",t[t.MBC5_PLUS_RAM=26]="MBC5_PLUS_RAM",t[t.MBC5_PLUS_RAM_PLUS_BATTERY=27]="MBC5_PLUS_RAM_PLUS_BATTERY",t[t.MBC5_PLUS_RUMBLE=28]="MBC5_PLUS_RUMBLE",t[t.MBC5_PLUS_RUMBLE_PLUS_RAM=29]="MBC5_PLUS_RUMBLE_PLUS_RAM",t[t.MBC5_PLUS_RUMBLE_PLUS_RAM_PLUS_BATTERY=30]="MBC5_PLUS_RUMBLE_PLUS_RAM_PLUS_BATTERY",t[t.MBC6=32]="MBC6",t[t.MBC7_PLUS_SENSOR_PLUS_RUMBLE_PLUS_RAM_PLUS_BATTERY=34]="MBC7_PLUS_SENSOR_PLUS_RUMBLE_PLUS_RAM_PLUS_BATTERY",t[t.POCKET_CAMERA=252]="POCKET_CAMERA",t[t.BANDAI_TAMA5=253]="BANDAI_TAMA5",t[t.HuC3=254]="HuC3",t[t.HuC1_PLUS_RAM_PLUS_BATTERY=255]="HuC1_PLUS_RAM_PLUS_BATTERY"})(o||(s.CartridgeType=o={}))}),define("misc/SramSaver",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SramSaver=void 0;class o{static saveFile(r,n){const i=Array.from(n);localStorage.setItem(`${r}.sav`,JSON.stringify(i))}static loadFile(r){const n=localStorage.getItem(`${r}.sav`);if(n!=null){const i=JSON.parse(n);return new Uint8Array(i)}return null}}s.SramSaver=o}),define("cartridge/ReadMethod",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ReadMethod=void 0;var o;(function(t){t[t.READ_BYTE=0]="READ_BYTE",t[t.READ_SIGNED_BYTE=1]="READ_SIGNED_BYTE",t[t.READ_WORD=2]="READ_WORD"})(o||(s.ReadMethod=o={}))}),define("cartridge/WriteMethods",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.WriteMethod=void 0;var o;(function(t){t[t.WRITE_BYTE=0]="WRITE_BYTE",t[t.WRITE_WORD=1]="WRITE_WORD"})(o||(s.WriteMethod=o={}))}),define("cartridge/MbcCartridge",["require","exports","misc/SramSaver","cartridge/Cartridge","cartridge/ReadMethod","cartridge/WriteMethods"],function(f,s,o,t,r,n){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.MbcCartridge=void 0;class i extends t.Cartridge{constructor(c){super(c),this.ramBytes.fill(255);const l=o.SramSaver.loadFile(this.name);l?.length===this.ramSize&&(this.ramBuffer=l.buffer,this.ramView=new DataView(l.buffer),this.ramBytes=l)}ramBuffer=new ArrayBuffer(this.ramSize);ramView=new DataView(this.ramBuffer);ramBytes=new Uint8Array(this.ramBuffer);sramTimeout=null;hasBattery=!1;readMethods=[c=>this.gameDataView.getUint8(c),c=>this.gameDataView.getInt8(c),c=>this.gameDataView.getUint16(c,!0)];ramReadMethods=[c=>this.ramView.getUint8(c),c=>this.ramView.getInt8(c),c=>this.ramView.getUint16(c,!0)];ramWriteMethods=[(c,l)=>{this.ramView.setUint8(c,l),this.hasBattery&&(this.sramTimeout!=null&&clearTimeout(this.sramTimeout),this.sramTimeout=setTimeout(()=>o.SramSaver.saveFile(this.name,this.ramBytes),1500))},(c,l)=>{this.ramView.setUint16(c,l,!0),this.hasBattery&&(this.sramTimeout!=null&&clearTimeout(this.sramTimeout),this.sramTimeout=setTimeout(()=>o.SramSaver.saveFile(this.name,this.ramBytes),1500))}];readByte(c){return this._read(c,r.ReadMethod.READ_BYTE)}readSignedByte(c){return this._read(c,r.ReadMethod.READ_SIGNED_BYTE)}readWord(c){return this._read(c,r.ReadMethod.READ_WORD)}_read(c,l){return-1}writeByte(c,l){this._write(c,l,n.WriteMethod.WRITE_BYTE)}writeWord(c,l){this._write(c,l,n.WriteMethod.WRITE_WORD)}_write(c,l,d){}}s.MbcCartridge=i}),define("cartridge/Mbc1Cartridge",["require","exports","cartridge/CartridgeType","cartridge/MbcCartridge"],function(f,s,o,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Mbc1Cartridge=void 0;class r extends t.MbcCartridge{constructor(i){super(i),this.type===o.CartridgeType.MBC1_PLUS_RAM_PLUS_BATTERY&&(this.hasBattery=!0)}ramEnabled=!1;mode=0;romBankNumber=1;ramBankNumber=0;resetRam(){this.ramBytes.fill(0,0,this.ramBytes.length-1)}_read(i,g){return i>=0&&i<=16383?this.readFromBankZero(i,g):i>=16384&&i<=32767?this.readFromBanksOneThrough7f(i,g):this.readFromRam(i,g)}readFromRam(i,g){if(!this.ramEnabled)return 255;const c=i-40960&8191,l=this.ramReadMethods[g];if(this.mode===0)return l(c);const d=(this.ramBankNumber<<13)+c;return l(d)}readFromBankZero(i,g){const c=this.readMethods[g],l=i&16383;if(this.mode===0)return c(l);const d=(this.ramBankNumber<<19)+l&this.romSize-1;return c(d)}readFromBanksOneThrough7f(i,g){const c=this.readMethods[g],l=(this.ramBankNumber<<5)+this.romBankNumber,d=i&16383,y=(l<<14)+d&this.romSize-1;return c(y)}_write(i,g,c){if(this.isRamEnableRegister(i))this.ramEnabled=g===10;else if(this.isRomBankNumberRegister(i))this.romBankNumber=g===0?1:g&31;else if(this.isRamBankNumberRegister(i))this.ramBankNumber=g&3;else if(this.isBankingModeRegister(i))this.mode=g&1;else if(this.isRamAddress(i)&&this.ramEnabled){const l=i-40960&8191,d=this.ramWriteMethods[c];if(this.mode===0)d(l,g);else{const y=(this.ramBankNumber<<13)+l;d(y,g)}}}isRamEnableRegister(i){return i>=0&&i<=8191}isRomBankNumberRegister(i){return i>=8192&&i<=16383}isRamBankNumberRegister(i){return i>=16384&&i<=24575}isBankingModeRegister(i){return i>=24576&&i<=32767}isRamAddress(i){return i>=40960&&i<=49151}}s.Mbc1Cartridge=r}),define("cartridge/Mbc2Cartridge",["require","exports","cartridge/CartridgeType","cartridge/Mbc1Cartridge"],function(f,s,o,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Mbc2Cartridge=void 0;class r extends t.Mbc1Cartridge{romBankNumber=1;constructor(i){super(i),this.type===o.CartridgeType.MBC2_PLUS_BATTERY&&(this.hasBattery=!0)}_read(i,g){const c=this.readMethods[g];if(this.isRomBankZero(i))return c(i);if(this.isRomBankOneThroughF(i)){const d=i&16383,y=(this.romBankNumber<<14)+d&this.romSize-1;return c(y)}if(this.isRam1(i))return c(i-40960)&15;const l=i-40960&511;return c(l)&15}_write(i,g,c){const l=this.ramWriteMethods[c];if(this.isRamEnableOrRomBankNumber(i))i>>8&1?this.ramEnabled=g===10:this.romBankNumber=g===0?1:g&15;else if(this.isRam1(i))l(i-40960,g);else{const d=i-40960&511;l(d,g&15)}}isRomBankZero(i){return i>=0&&i<=16383}isRomBankOneThroughF(i){return i>=16384&&i<=32767}isRam1(i){return i>=40960&&i<=41471}isRam2(i){return i>=41472&&i<=49151}isRamEnableOrRomBankNumber(i){return i>=0&&i<=16383}}s.Mbc2Cartridge=r}),define("misc/BitOperations",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.resetBit=s.getBit=s.setBit=void 0;function o(n,i,g){let c=r(n,i);return g===1&&(c|=g<<i),c}s.setBit=o;function t(n,i){return n>>i&1}s.getBit=t;function r(n,i){return n&~(1<<i)}s.resetBit=r}),define("cartridge/Mbc3Cartridge",["require","exports","misc/BitOperations","cartridge/CartridgeType","cartridge/MbcCartridge"],function(f,s,o,t,r){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Mbc3Cartridge=void 0;var n;(function(g){g[g.Unlatched=0]="Unlatched",g[g.Latched=1]="Latched"})(n||(n={}));class i extends r.MbcCartridge{constructor(c){super(c),this.type===t.CartridgeType.MBC3_PLUS_TIMER_PLUS_RAM_PLUS_BATTERY&&(this.updateClock(),setInterval(()=>{this.updateClock()},1e3)),[t.CartridgeType.MBC3_PLUS_RAM_PLUS_BATTERY,t.CartridgeType.MBC3_PLUS_TIMER_PLUS_BATTERY,t.CartridgeType.MBC3_PLUS_TIMER_PLUS_RAM_PLUS_BATTERY].includes(this.type)&&(this.hasBattery=!0)}mode=0;ramAndTimerEnable=!1;romBankNumber=1;ramBankNumberOrRtcRegister=0;sramTimeout=null;secondsRegister=[0,0];minutesRegister=[0,0];hoursRegister=[0,0];lowerDaysRegister=[0,0];upperDaysRegister=[0,0];latchClockRegister=-1;clockIsLatched=!1;updateClock(){const c=new Date;this.secondsRegister[n.Unlatched]=c.getSeconds(),this.minutesRegister[n.Unlatched]=c.getMinutes(),this.hoursRegister[n.Unlatched]=c.getHours(),this.lowerDaysRegister[n.Unlatched]=this.getDays(),this.upperDaysRegister[n.Unlatched]=0}getDays(){const c=new Date;return(Date.UTC(c.getFullYear(),c.getMonth(),c.getDate())-Date.UTC(c.getFullYear(),0,0))/24/60/60/1e3}_read(c,l){const d=this.readMethods[l],y=this.ramReadMethods[l];if(this.isRomBankZero(c))return d(c);if(this.isRomBankOneThru7f(c)){const e=c&16383,a=this.romBankNumber<<14|e;return d(a)}if(!this.ramAndTimerEnable)return 255;if(this.ramBankNumberOrRtcRegister<=3){const e=c-40960&8191,a=this.ramBankNumberOrRtcRegister<<13|e;return y(a)}else return this.readFromRtcRegister()}copyRTCToLatchedRegisters(){this.secondsRegister[n.Latched]=this.secondsRegister[n.Unlatched],this.minutesRegister[n.Latched]=this.minutesRegister[n.Unlatched],this.hoursRegister[n.Latched]=this.minutesRegister[n.Unlatched],this.lowerDaysRegister[n.Latched]=this.lowerDaysRegister[n.Unlatched],this.upperDaysRegister[n.Latched]=this.upperDaysRegister[n.Unlatched]}_write(c,l,d){const y=this.ramWriteMethods[d];if(this.isRamAndTimerEnableAddress(c)){const e=l&15;this.ramAndTimerEnable=e===10}else if(this.isRomBankNumber(c))this.romBankNumber=l&127,this.romBankNumber===0&&(this.romBankNumber=1);else if(this.isRamBankNumberOrRtcRegisterSelect(c))this.ramBankNumberOrRtcRegister=l;else if(this.isLatchClockAddress(c))this.latchClockRegister===0&&l===1&&(this.clockIsLatched=!this.clockIsLatched,this.clockIsLatched&&this.copyRTCToLatchedRegisters()),this.latchClockRegister=l;else if(this.isRamOrRtcRegisterAddress(c))if(this.ramBankNumberOrRtcRegister<=3){const e=c-40960&8191,a=(this.ramBankNumberOrRtcRegister<<13)+e;y(a,l)}else this.updateRtcRegister(l)}readFromRtcRegister(){const c=n.Unlatched;switch(this.ramBankNumberOrRtcRegister){case 8:return this.secondsRegister[c];case 9:return this.minutesRegister[c];case 10:return this.hoursRegister[c];case 11:return this.lowerDaysRegister[c];case 12:return this.upperDaysRegister[c];default:throw new Error(`invalid value specified:0x${this.ramBankNumberOrRtcRegister.toString(16)}`)}}updateRtcRegister(c){const l=n.Unlatched;switch(this.upperDaysRegister[l]=(0,o.setBit)(this.upperDaysRegister[l],6,1),this.ramBankNumberOrRtcRegister){case 8:this.secondsRegister[l]=c%60;break;case 9:this.minutesRegister[l]=c%60;break;case 10:this.hoursRegister[l]=c%60;break;case 11:const d=(0,o.getBit)(c,8);this.lowerDaysRegister[l]=c&255,this.upperDaysRegister[l]=(0,o.setBit)(this.upperDaysRegister[l],0,d),c>511&&(this.upperDaysRegister[l]=(0,o.setBit)(this.upperDaysRegister[l],7,1));break;case 12:this.upperDaysRegister[l]=c&255;break;default:throw new Error("invalid value specified")}this.upperDaysRegister[l]=(0,o.setBit)(this.upperDaysRegister[l],6,0)}isRomBankZero(c){return c>=0&&c<=16383}isRomBankOneThru7f(c){return c>=16384&&c<=32767}isRamAndTimerEnableAddress(c){return c>=0&&c<=8191}isRomBankNumber(c){return c>=8192&&c<=16383}isRamBankNumberOrRtcRegisterSelect(c){return c>=16384&&c<=24575}isLatchClockAddress(c){return c>=24576&&c<=32767}isRamOrRtcRegisterAddress(c){return c>=40960&&c<=49151}}s.Mbc3Cartridge=i}),define("cartridge/Mbc5Cartridge",["require","exports","cartridge/CartridgeType","cartridge/MbcCartridge"],function(f,s,o,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Mbc5Cartridge=void 0;class r extends t.MbcCartridge{romBankNumberLower=0;romBankNumberHigher=0;ramBankNumber=0;ramEnabled=!1;constructor(i){super(i),this.type===o.CartridgeType.MBC5_PLUS_RAM_PLUS_BATTERY&&(this.hasBattery=!0)}_read(i,g){const c=this.readMethods[g],l=this.ramReadMethods[g];if(this.isRomBankZero(i))return c(i);if(this.isRomBankZeroThrough1ff(i)){const d=i&16383,e=((this.romBankNumberHigher<<8)+this.romBankNumberLower<<14)+d&this.romSize-1;return c(e)}if(this.isRam(i)){if(!this.ramEnabled)return 255;const d=i-40960&8191,y=(this.ramBankNumber<<13)+d;return l(y)}throw Error("invalid address specified")}_write(i,g,c){const l=this.ramWriteMethods[c];if(this.isRamEnable(i)){const d=g&15;this.ramEnabled=d===10}else if(this.isRomBankNumberLowerBits(i))this.romBankNumberLower=g&255;else if(this.isRomBankNumberUpperBit(i))this.romBankNumberHigher=g&1;else if(this.isRamBankNumber(i))this.ramBankNumber=g&15;else if(this.isRam(i)&&this.ramEnabled){const d=i-40960&8191,y=(this.ramBankNumber<<13)+d;l(y,g)}}isRomBankZero(i){return i>=0&&i<=16383}isRomBankZeroThrough1ff(i){return i>=16384&&i<=32767}isRam(i){return i>=40960&&i<=49151}isRamEnable(i){return i>=0&&i<=8191}isRomBankNumberLowerBits(i){return i>=8192&&i<=12287}isRomBankNumberUpperBit(i){return i>=12288&&i<=16383}isRamBankNumber(i){return i>=16384&&i<=24575}}s.Mbc5Cartridge=r}),define("cpu/memory_registers/MemoryRegister",["require","exports","misc/BitOperations"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.MemoryRegister=void 0;class t{address;memory;type;constructor(n,i,g){this.address=n,this.memory=i,this.type=g}get value(){return this.memory.readByte(this.address)}set value(n){this.memory.writeByte(this.address,n,this.type)}setBit(n,i){this.value=(0,o.setBit)(this.value,n,i)}getBit(n){return(0,o.getBit)(this.value,n)}resetBit(n){this.value=(0,o.resetBit)(this.value,n)}}s.MemoryRegister=t}),define("gpu/registers/BackgroundPaletteIndexRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.BackgroundPaletteIndexRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65384,n,"BackgroundPaletteIndexRegister")}get paletteAddress(){return this.value&63}set paletteAddress(n){const i=n&63,g=this.getBit(7)<<7|i;this.memory.writeByte(this.address,g)}get autoIncrement(){return this.getBit(7)===1}}s.BackgroundPaletteIndexRegister=t}),define("gpu/registers/ObjectPaletteIndexRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ObjectPaletteIndexRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65386,n)}get paletteAddress(){return this.value&63}set paletteAddress(n){const i=n&63,g=this.getBit(7)<<7|i;this.memory.writeByte(this.address,g)}get autoIncrement(){return this.value>>7&1}}s.ObjectPaletteIndexRegister=t}),define("cpu/memory_registers/JoypadRegister",["require","exports","misc/BitOperations"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.joypadRegister=s.JoypadRegister=void 0;class t{value=255;isPressingDown=!1;isPressingUp=!1;isPressingLeft=!1;isPressingRight=!1;isPressingA=!1;isPressingB=!1;isPressingStart=!1;isPressingSelect=!1;get isCheckingDirections(){return this.getBit(4)===0}get isCheckingButtons(){return this.getBit(5)===0}getInput(){return this.isCheckingDirections&&(this.setBit(0,this.isPressingRight?0:1),this.setBit(1,this.isPressingLeft?0:1),this.setBit(2,this.isPressingUp?0:1),this.setBit(3,this.isPressingDown?0:1)),this.isCheckingButtons&&(this.setBit(0,this.isPressingA?0:1),this.setBit(1,this.isPressingB?0:1),this.setBit(2,this.isPressingSelect?0:1),this.setBit(3,this.isPressingStart?0:1)),this.setBit(4,this.isCheckingButtons?0:1),this.setBit(5,this.isCheckingDirections?0:1),this.value}setBit(n,i){this.value=(0,o.setBit)(this.value,n,i)}getBit(n){return(0,o.getBit)(this.value,n)}}s.JoypadRegister=t,s.joypadRegister=new t}),define("cpu/Memory",["require","exports","cartridge/Cartridge","cartridge/CartridgeType","cartridge/Mbc1Cartridge","cartridge/Mbc2Cartridge","cartridge/Mbc3Cartridge","cartridge/Mbc5Cartridge","gpu/registers/BackgroundPaletteIndexRegister","gpu/registers/ObjectPaletteIndexRegister","misc/BitOperations","cpu/memory_registers/JoypadRegister"],function(f,s,o,t,r,n,i,g,c,l,d,y){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Memory=void 0;const e=65280,a=65350,h=65284,p=327,E=65365;var R;(function(C){C[C.GeneralPurpose=0]="GeneralPurpose",C[C.Hblank=1]="Hblank"})(R||(R={}));class b{memoryBuffer=new ArrayBuffer(65536);memoryView=new DataView(this.memoryBuffer);memoryBytes=new Uint8Array(this.memoryBuffer);static BgpdRegisterAddress=65385;static ObpdRegisterAddress=65387;backgroundPaletteIndexRegister=new c.BackgroundPaletteIndexRegister(this);objectPaletteIndexRegister=new l.ObjectPaletteIndexRegister(this);initialHdmaSourceAddress=0;initialHdmaDestinationAddress=0;currentHdmaSourceAddress=-1;currentHdmaDestinationAddress=-1;currentTransferLength=-1;vramBank1Buffer=new ArrayBuffer(8192);vramView=new DataView(this.vramBank1Buffer);vramBytes=new Uint8Array(this.vramBank1Buffer);backgroundPaletteRam=new ArrayBuffer(64);backgroundPaletteView=new DataView(this.backgroundPaletteRam);backgroundPaletteBytes=new Uint8Array(this.backgroundPaletteRam);objectPaletteRam=new ArrayBuffer(64);objectPaletteView=new DataView(this.objectPaletteRam);objectPaletteBytes=new Uint8Array(this.objectPaletteRam);cartridge;isGBC;wramBankBuffers=[];wramBankViews=[];wramBankBytes=[];constructor(){for(let u=1;u<8;u++){const m=new ArrayBuffer(4096);this.wramBankBuffers[u]=m,this.wramBankViews[u]=new DataView(m),this.wramBankBytes[u]=new Uint8Array(m)}}loadCartridge(u){const m=u.getUint8(p);switch(m){case t.CartridgeType.ROM:this.cartridge=new o.Cartridge(u);break;case t.CartridgeType.MBC1:case t.CartridgeType.MBC1_PLUS_RAM:case t.CartridgeType.MBC1_PLUS_RAM_PLUS_BATTERY:this.cartridge=new r.Mbc1Cartridge(u);break;case t.CartridgeType.MBC2:case t.CartridgeType.MBC2_PLUS_BATTERY:this.cartridge=new n.Mbc2Cartridge(u);break;case t.CartridgeType.MBC3:case t.CartridgeType.MBC3_PLUS_RAM:case t.CartridgeType.MBC3_PLUS_RAM_PLUS_BATTERY:case t.CartridgeType.MBC3_PLUS_TIMER_PLUS_BATTERY:case t.CartridgeType.MBC3_PLUS_TIMER_PLUS_RAM_PLUS_BATTERY:this.cartridge=new i.Mbc3Cartridge(u);break;case t.CartridgeType.MBC5:case t.CartridgeType.MBC5_PLUS_RAM:case t.CartridgeType.MBC5_PLUS_RAM_PLUS_BATTERY:this.cartridge=new g.Mbc5Cartridge(u);break;default:throw new Error(`Cartridge type not supported: ${m}`)}return this.isGBC=this.cartridge.isGameboyColor(),this.isGBC}get wramBank(){const u=this.readByte(65392);return u===0?1:u&7}set wramBank(u){const m=u&7?u:1;this.writeByte(65392,m&7)}reset(){this.memoryBytes.fill(0,0,this.memoryBytes.length-1),this.vramBytes.fill(0,0,this.vramBytes.length-1),this.backgroundPaletteBytes.fill(0,0,this.backgroundPaletteBytes.length-1),this.objectPaletteBytes.fill(0,0,this.objectPaletteBytes.length-1)}readByte(u,m){const x=m??this.vramBank;if(this.cartridge==null)throw new Error("game ROM not loaded into memory!");return this.isAccessingCartridge(u)?this.cartridge.readByte(u):u===b.BgpdRegisterAddress?this.backgroundPaletteView.getUint8(this.backgroundPaletteIndexRegister.paletteAddress):u===b.ObpdRegisterAddress?this.objectPaletteView.getUint8(this.objectPaletteIndexRegister.paletteAddress):u===e?y.joypadRegister.getInput():this.isVram(u)&&x===1?this.vramView.getUint8(u-32768):this.isWramBanks(u)?this.wramBankViews[this.wramBank].getUint8(u-53248):this.memoryView.getUint8(u)}get vramBank(){return this.memoryView.getUint8(65359)&1}readSignedByte(u){if(this.cartridge==null)throw new Error("game ROM not loaded into memory!");return this.isAccessingCartridge(u)?this.cartridge.readSignedByte(u):this.isVram(u)&&this.vramBank===1?this.vramView.getInt8(u-32768):this.isWramBanks(u)?this.wramBankViews[this.wramBank].getInt8(u-53248):this.memoryView.getInt8(u)}readWord(u){if(this.cartridge==null)throw new Error("game ROM not loaded into memory!");return this.isAccessingCartridge(u)?this.cartridge.readWord(u):this.isVram(u)&&this.vramBank===1?this.vramView.getUint16(u-32768,!0):this.isWramBanks(u)?this.wramBankViews[this.wramBank].getUint16(u-53248,!0):this.memoryView.getUint16(u,!0)}writeByte(u,m,x,T=!1){if(this.isAccessingCartridge(u)){this.cartridge?.writeByte(u,m);return}if(u===e){y.joypadRegister.value=m;return}if(u===h&&!T){this.memoryView.setUint8(u,0);return}if(u===b.BgpdRegisterAddress){this.backgroundPaletteView.setUint8(this.backgroundPaletteIndexRegister.paletteAddress,m),this.backgroundPaletteIndexRegister.autoIncrement&&this.backgroundPaletteIndexRegister.paletteAddress++;return}if(u===b.ObpdRegisterAddress){this.objectPaletteView.setUint8(this.objectPaletteIndexRegister.paletteAddress,m),this.objectPaletteIndexRegister.autoIncrement&&this.objectPaletteIndexRegister.paletteAddress++;return}if(this.isVram(u)&&this.vramBank===1){this.vramView.setUint8(u-32768,m);return}if(this.isWramBanks(u)){this.wramBankViews[this.wramBank].setUint8(u-53248,m);return}this.memoryView.setUint8(u,m),u===a&&this.doDmaTransfer(m),u===E&&this.doHdmaTransfer(m)}writeWord(u,m){if(this.isAccessingCartridge(u)){this.cartridge?.writeWord(u,m);return}if(this.isVram(u)&&this.isGBC&&this.vramBank===1){this.vramView.setUint16(u-32768,m,!0);return}if(this.isWramBanks(u)){this.wramBankViews[this.wramBank].setUint16(u-53248,m,!0);return}this.memoryView.setUint16(u,m,!0)}isAccessingCartridge(u){return u<=32767||u>=40960&&u<=49151}isVram(u){return u>=32768&&u<=40959}isWramBanks(u){return u>=53248&&u<=57343}doDmaTransfer(u){const m=u<<8;for(let x=0;x<160;x++)this.writeByte(65024+x,this.readByte(m+x))}doHdmaTransfer(u){const m=((u&127)+1)*16,x=(0,d.getBit)(u,7),T=this.hdmaDestinationAddress,B=this.hdmaSourceAddress;x===R.GeneralPurpose?this.doGeneralPurposeHdma(B,T,m):(this.currentHdmaDestinationAddress=-1,this.currentHdmaSourceAddress=-1,this.initialHdmaSourceAddress=B,this.initialHdmaDestinationAddress=T,this.currentTransferLength=m)}get hdmaDestinationAddress(){const u=this.readByte(65363)&31,m=this.readByte(65364)&240;return(u<<8)+m}set hdmaDestinationAddress(u){const m=u>>8&31,x=u&240;this.writeByte(65363,m),this.writeByte(65364,x)}get hdmaSourceAddress(){const u=this.readByte(65361),m=this.readByte(65362)&240;return(u<<8)+m}set hdmaSourceAddress(u){const m=u>>8,x=u&240;this.writeByte(65361,m),this.writeByte(65362,x)}doGeneralPurposeHdma(u,m,x){const T=m|32768;for(let B=0;B<x;B++)this.writeByte(T+B,this.readByte(u+B));this.writeByte(65365,255),this.hdmaDestinationAddress+=x,this.hdmaSourceAddress+=x}doHblankHdmaTransfer(){if(this.currentTransferLength===0)return;this.currentHdmaDestinationAddress===-1&&(this.currentHdmaDestinationAddress=this.initialHdmaDestinationAddress),this.currentHdmaSourceAddress===-1&&(this.currentHdmaSourceAddress=this.initialHdmaSourceAddress);const u=this.currentHdmaDestinationAddress|32768;for(let m=0;m<16;m++)this.writeByte(u+m,this.readByte(this.currentHdmaSourceAddress+m));this.hdmaDestinationAddress+=16,this.hdmaSourceAddress+=16,this.currentTransferLength-=16,this.currentHdmaDestinationAddress=this.hdmaDestinationAddress,this.currentHdmaSourceAddress=this.hdmaSourceAddress}}s.Memory=b}),define("apu/AudioBufferPlayer",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.AudioBufferPlayer=void 0;class o{audioContext;audioBuffer;audioData;readPointer=new Uint32Array(new SharedArrayBuffer(4));writePointer=new Uint32Array(new SharedArrayBuffer(4));samples=new Float32Array(1024);sampleIndex=0;audioPlayerNode;constructor(r){this.audioContext=r,this.audioBuffer=new SharedArrayBuffer(this.audioContext.sampleRate/20*Float32Array.BYTES_PER_ELEMENT),this.audioData=new Float32Array(this.audioBuffer),this.addAudioWorklet()}async addAudioWorklet(){await this.audioContext.audioWorklet.addModule("AudioProcessor.js"),this.audioPlayerNode=new AudioWorkletNode(this.audioContext,"audio-processor",{processorOptions:{audioData:this.audioData,readPointer:this.readPointer,writePointer:this.writePointer}}),this.audioPlayerNode.connect(this.audioContext.destination)}writeSample(r){this.samples[this.sampleIndex]=r,this.sampleIndex++,this.sampleIndex===this.samples.length&&(this.push(this.samples),this.sampleIndex=0)}push(r){const n=Atomics.load(this.readPointer,0),i=Atomics.load(this.writePointer,0),g=this._availableWrite(n,i);if(g===0)return 0;const c=Math.min(g,r.length),l=Math.min(this.audioData.length-i,c),d=c-l;this.copy(r,0,this.audioData,i,l),this.copy(r,l,this.audioData,0,d);const y=(i+c)%this.audioData.length;return Atomics.store(this.writePointer,0,y),c}availableWrite(){const r=Atomics.load(this.readPointer,0),n=Atomics.load(this.writePointer,0);return this._availableWrite(r,n)}_availableWrite(r,n){let i=r-n-1;return n>=r&&(i+=this.audioData.length),i}copy(r,n,i,g,c){for(let l=0;l<c;l++)i[g+l]=r[n+l]}}s.AudioBufferPlayer=o}),define("apu/registers/ChannelFrequencyHighRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ChannelFrequencyHighRegister=void 0;class t extends o.MemoryRegister{get frequencyHighBits(){return this.value&7}get soundLengthEnable(){return this.getBit(6)}get restartTrigger(){return this.getBit(7)}set restartTrigger(n){this.setBit(7,n&1)}}s.ChannelFrequencyHighRegister=t}),define("apu/registers/ChannelLengthTimerAndDutyRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ChannelLengthTimerAndDutyRegister=void 0;class t extends o.MemoryRegister{get waveDuty(){return this.value>>6&3}get initialLengthTimer(){return this.value&63}}s.ChannelLengthTimerAndDutyRegister=t}),define("apu/registers/ChannelSweepRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ChannelSweepRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65296,n)}get sweepShift(){return this.value&7}get sweepDirection(){return this.getBit(3)}get sweepPace(){return this.value>>4&7}}s.ChannelSweepRegister=t}),define("apu/registers/ChannelVolumeAndEnvelopeRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ChannelVolumeAndEnvelopeRegister=void 0;class t extends o.MemoryRegister{get sweepPace(){return this.value&7}get envelopeDirection(){return this.getBit(3)}get initialVolume(){return this.value>>4}}s.ChannelVolumeAndEnvelopeRegister=t}),define("apu/registers/MasterVolumeAndVinPanningRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.MasterVolumeAndVinPanningRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65316,n)}get rightVolume(){return(this.value&7)+1}get mixVinIntoRightOutput(){return this.getBit(3)}get leftVolume(){return(this.value>>4&7)+1}get mixVinIntoLeftOutput(){return this.getBit(7)}}s.MasterVolumeAndVinPanningRegister=t}),define("apu/registers/SoundOnRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SoundOnRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65318,n)}get isSoundOn(){return this.getBit(7)}get isChannel1On(){return this.getBit(0)}get isChannel2On(){return this.getBit(1)}get isChannel3On(){return this.getBit(2)}get isChannel4On(){return this.getBit(3)}set isChannel4On(n){this.setBit(3,n&1)}set isChannel3On(n){this.setBit(2,n&1)}set isChannel2On(n){this.setBit(1,n&1)}set isChannel1On(n){this.setBit(0,n&1)}}s.SoundOnRegister=t}),define("apu/registers/SoundPanningRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.SoundPanningRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65317,n)}get mixChannel1Right(){return this.getBit(0)}get mixChannel2Right(){return this.getBit(1)}get mixChannel3Right(){return this.getBit(2)}get mixChannel4Right(){return this.getBit(3)}get mixChannel1Left(){return this.getBit(4)}get mixChannel2Left(){return this.getBit(5)}get mixChannel3Left(){return this.getBit(6)}get mixChannel4Left(){return this.getBit(7)}}s.SoundPanningRegister=t}),define("apu/channels/Channel2",["require","exports","cpu/memory_registers/MemoryRegister","apu/registers/ChannelFrequencyHighRegister","apu/registers/ChannelLengthTimerAndDutyRegister","apu/registers/ChannelVolumeAndEnvelopeRegister","apu/registers/MasterVolumeAndVinPanningRegister","apu/registers/SoundOnRegister","apu/registers/SoundPanningRegister"],function(f,s,o,t,r,n,i,g,c){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Channel2=void 0;class l{dutyTable=[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,1],[0,0,0,0,1,1,1,1],[1,1,1,1,1,1,0,0]];memory;channelFrequencyLowRegister;channelFrequencyHighRegister;channelLengthTimerAndDutyRegister;channelVolumeAndEnvelopeRegister;soundPanningRegister;soundOnRegister;masterVolumeAndVinPanningRegister;volume=0;periodTimer=0;lengthTimer=0;frequencyTimer=0;waveDutyPosition=0;constructor(y){this.memory=y,this.channelLengthTimerAndDutyRegister=new r.ChannelLengthTimerAndDutyRegister(65302,this.memory),this.channelVolumeAndEnvelopeRegister=new n.ChannelVolumeAndEnvelopeRegister(65303,this.memory),this.channelFrequencyLowRegister=new o.MemoryRegister(65304,this.memory),this.channelFrequencyHighRegister=new t.ChannelFrequencyHighRegister(65305,this.memory),this.soundOnRegister=new g.SoundOnRegister(this.memory),this.soundPanningRegister=new c.SoundPanningRegister(this.memory),this.masterVolumeAndVinPanningRegister=new i.MasterVolumeAndVinPanningRegister(this.memory)}tick(y){this.frequencyTimer-=y,this.channelFrequencyHighRegister.restartTrigger&&(this.restartSound(),this.channelFrequencyHighRegister.restartTrigger=0),this.frequencyTimer<=0&&(this.frequencyTimer=this.getFrequencyTimer(),this.waveDutyPosition=(this.waveDutyPosition+1)%8)}restartSound(){this.soundOnRegister.isChannel2On=1,this.periodTimer=this.channelVolumeAndEnvelopeRegister.sweepPace,this.volume=this.channelVolumeAndEnvelopeRegister.initialVolume,this.frequencyTimer=this.getFrequencyTimer(),this.lengthTimer=64-this.channelLengthTimerAndDutyRegister.initialLengthTimer}getSample(){const y=this.dutyTable[this.channelLengthTimerAndDutyRegister.waveDuty][this.waveDutyPosition];return(this.volume!==0&&this.soundOnRegister.isChannel2On?y*this.volume:0)/7.5-1}clockLength(){this.channelFrequencyHighRegister.soundLengthEnable&&(this.lengthTimer--,this.lengthTimer===0&&(this.soundOnRegister.isChannel2On=0))}clockVolume(){const{sweepPace:y,envelopeDirection:e}=this.channelVolumeAndEnvelopeRegister;y!==0&&(this.periodTimer!==0&&this.periodTimer--,this.periodTimer===0&&(this.periodTimer=y,e===0&&this.volume>0?this.volume--:e===1&&this.volume<15&&this.volume++))}getFrequencyTimer(){return(2048-this.getFrequency())*4}getFrequency(){return this.channelFrequencyLowRegister.value|this.channelFrequencyHighRegister.frequencyHighBits<<8}}s.Channel2=l}),define("apu/channels/Channel1",["require","exports","cpu/memory_registers/MemoryRegister","apu/registers/ChannelFrequencyHighRegister","apu/registers/ChannelLengthTimerAndDutyRegister","apu/registers/ChannelSweepRegister","apu/registers/ChannelVolumeAndEnvelopeRegister","apu/channels/Channel2"],function(f,s,o,t,r,n,i,g){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Channel1=void 0;class c extends g.Channel2{sweepEnabled=!1;sweepTimer=0;shadowFrequency=0;channelSweepRegister;constructor(d){super(d),this.channelSweepRegister=new n.ChannelSweepRegister(d),this.channelLengthTimerAndDutyRegister=new r.ChannelLengthTimerAndDutyRegister(65297,this.memory),this.channelVolumeAndEnvelopeRegister=new i.ChannelVolumeAndEnvelopeRegister(65298,this.memory),this.channelFrequencyLowRegister=new o.MemoryRegister(65299,this.memory),this.channelFrequencyHighRegister=new t.ChannelFrequencyHighRegister(65300,this.memory)}restartSound(){this.soundOnRegister.isChannel2On=1,this.periodTimer=this.channelVolumeAndEnvelopeRegister.sweepPace,this.volume=this.channelVolumeAndEnvelopeRegister.initialVolume,this.frequencyTimer=this.getFrequencyTimer(),this.lengthTimer=64-this.channelLengthTimerAndDutyRegister.initialLengthTimer,this.sweepTimer=this.channelSweepRegister.sweepPace!==0?this.channelSweepRegister.sweepPace:8,(this.channelSweepRegister.sweepPace>0||this.channelSweepRegister.sweepShift>0)&&(this.sweepEnabled=!0),this.shadowFrequency=this.getFrequency()}calculateFrequency(){let d=this.shadowFrequency>>this.channelSweepRegister.sweepShift;return this.channelSweepRegister.sweepDirection===1?d=this.shadowFrequency+d:d=this.shadowFrequency-d,d>2047&&(this.soundOnRegister.isChannel1On=0),d}clockSweep(){if(this.sweepTimer>0&&this.sweepTimer--,this.sweepTimer===0&&(this.sweepTimer=this.channelSweepRegister.sweepPace!==0?this.channelSweepRegister.sweepPace:8,this.sweepEnabled&&this.sweepTimer>0)){const d=this.calculateFrequency();d<2047&&this.sweepTimer>0&&(this.frequencyTimer=d,this.shadowFrequency=d)}}}s.Channel1=c}),define("apu/registers/ChannelDACEnableRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ChannelDACEnableRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65306,n)}get dacEnabled(){return this.getBit(7)}}s.ChannelDACEnableRegister=t}),define("apu/registers/ChannelOutputLevelRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ChannelOutputLevelRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65308,n)}get outputLevelSelection(){return this.value>>5&3}}s.ChannelOutputLevelRegister=t}),define("apu/channels/Channel3",["require","exports","cpu/memory_registers/MemoryRegister","apu/registers/ChannelDACEnableRegister","apu/registers/ChannelFrequencyHighRegister","apu/registers/ChannelOutputLevelRegister","apu/registers/SoundOnRegister"],function(f,s,o,t,r,n,i){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Channel3=void 0;class g{memory;channelDACEnableRegister;channelFrequencyLowRegister;channelFrequencyHighRegister;channelLengthTimerRegister;channelOutputLevelRegister;soundOnRegister;sampleStartAddress=65328;frequencyTimer=0;samplePosition=0;lengthTimer=0;volumeShifts=[4,0,1,2];constructor(l){this.memory=l,this.channelDACEnableRegister=new t.ChannelDACEnableRegister(this.memory),this.channelLengthTimerRegister=new o.MemoryRegister(65307,this.memory),this.channelOutputLevelRegister=new n.ChannelOutputLevelRegister(this.memory),this.channelFrequencyLowRegister=new o.MemoryRegister(65309,this.memory),this.channelFrequencyHighRegister=new r.ChannelFrequencyHighRegister(65310,this.memory),this.soundOnRegister=new i.SoundOnRegister(this.memory)}tick(l){this.frequencyTimer-=l,this.channelFrequencyHighRegister.restartTrigger&&(this.restartSound(),this.channelFrequencyHighRegister.restartTrigger=0),this.frequencyTimer<=0&&(this.frequencyTimer=this.getFrequencyTimer(),this.samplePosition=(this.samplePosition+1)%32)}clockLength(){this.channelFrequencyHighRegister.soundLengthEnable&&(this.lengthTimer--,this.lengthTimer===0&&(this.soundOnRegister.isChannel3On=0))}getSample(){const l=Math.floor(this.samplePosition/2),d=this.samplePosition%2===0,y=this.memory.readByte(this.sampleStartAddress+l),a=(d?y>>4:y&15)>>this.volumeShifts[this.channelOutputLevelRegister.outputLevelSelection];return this.soundOnRegister.isChannel3On&&this.channelDACEnableRegister.dacEnabled?a/7.5-1:0}restartSound(){this.soundOnRegister.isChannel3On=1,this.frequencyTimer=this.getFrequencyTimer(),this.samplePosition=0,this.lengthTimer=256-this.channelLengthTimerRegister.value}getFrequencyTimer(){return(2048-this.getFrequency())*2}getFrequency(){return this.channelFrequencyLowRegister.value|this.channelFrequencyHighRegister.frequencyHighBits<<8}}s.Channel3=g}),define("apu/registers/Channel4ControlRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Channel4ControlRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65315,n)}get soundLengthEnable(){return this.getBit(6)}get restartTrigger(){return this.getBit(7)}}s.Channel4ControlRegister=t}),define("apu/registers/Channel4LengthTimerRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Channel4LengthTimerRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65312,n)}get lengthTimer(){return this.value&63}}s.Channel4LengthTimerRegister=t}),define("apu/registers/ChannelFrequencyAndRandomnessRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ChannelFrequencyAndRandomnessRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65314,n)}get divisorCode(){return this.value&7}get lfsrWidth(){return this.getBit(3)}get clockShift(){return this.value>>4}}s.ChannelFrequencyAndRandomnessRegister=t}),define("apu/channels/Channel4",["require","exports","misc/BitOperations","apu/registers/Channel4ControlRegister","apu/registers/Channel4LengthTimerRegister","apu/registers/ChannelFrequencyAndRandomnessRegister","apu/registers/ChannelVolumeAndEnvelopeRegister","apu/registers/SoundOnRegister"],function(f,s,o,t,r,n,i,g){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Channel4=void 0;class c{channel4LengthTimerRegister;channelVolumeAndEnvelopeRegister;channelFrequencyAndRandomnessRegister;soundOnRegister;channel4ControlRegister;memory;divisors=[8,16,32,48,64,80,96,112];frequencyTimer=0;lengthTimer=0;volume=0;linearFeedbackShift=0;periodTimer=0;constructor(d){this.memory=d,this.channel4LengthTimerRegister=new r.Channel4LengthTimerRegister(this.memory),this.channelVolumeAndEnvelopeRegister=new i.ChannelVolumeAndEnvelopeRegister(65313,this.memory),this.channelFrequencyAndRandomnessRegister=new n.ChannelFrequencyAndRandomnessRegister(this.memory),this.channel4ControlRegister=new t.Channel4ControlRegister(this.memory),this.soundOnRegister=new g.SoundOnRegister(this.memory)}tick(d){if(this.channel4ControlRegister.restartTrigger&&this.restartSound(),this.frequencyTimer-=d,this.frequencyTimer===0){this.frequencyTimer=this.getFrequencyTimer();const y=(0,o.getBit)(this.linearFeedbackShift,0)^(0,o.getBit)(this.linearFeedbackShift,1);this.linearFeedbackShift=this.linearFeedbackShift>>1|y<<14,this.channelFrequencyAndRandomnessRegister.lfsrWidth===1&&(this.linearFeedbackShift=(0,o.setBit)(this.linearFeedbackShift,6,y))}}clockLength(){this.channel4ControlRegister.soundLengthEnable&&(this.lengthTimer--,this.lengthTimer===0&&(this.soundOnRegister.isChannel4On=0))}clockVolume(){const{sweepPace:d,envelopeDirection:y}=this.channelVolumeAndEnvelopeRegister;d!==0&&(this.periodTimer!==0&&this.periodTimer--,this.periodTimer===0&&(this.periodTimer=d,y===0&&this.volume>0?this.volume--:y===1&&this.volume<15&&this.volume++))}getSample(){const d=(~this.linearFeedbackShift&1)*this.volume;return this.soundOnRegister.isChannel4On?d/7.5-1:0}restartSound(){this.soundOnRegister.isChannel4On=1,this.frequencyTimer=this.getFrequencyTimer(),this.linearFeedbackShift=32767}getFrequencyTimer(){return this.divisors[this.channelFrequencyAndRandomnessRegister.divisorCode]<<this.channelFrequencyAndRandomnessRegister.clockShift}}s.Channel4=c}),define("apu/APU",["require","exports","apu/AudioBufferPlayer","apu/channels/Channel1","apu/channels/Channel2","apu/channels/Channel3","apu/channels/Channel4"],function(f,s,o,t,r,n,i){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.APU=void 0;class g{memory;channel1;channel2;channel3;channel4;frameSequencerCyclesPerStep=8192;frameSequencerStep=0;audioContext=new AudioContext({sampleRate:44100});cpuUperatingHertz=4194304;cyclesPerSample=this.cpuUperatingHertz/44100;sampleCycles=0;frameSequencerCycles=0;audioBufferPlayer;constructor(l){this.memory=l,this.channel1=new t.Channel1(l),this.channel2=new r.Channel2(l),this.channel3=new n.Channel3(l),this.channel4=new i.Channel4(l),this.audioBufferPlayer=new o.AudioBufferPlayer(this.audioContext)}tick(l){this.sampleCycles+=l,this.frameSequencerCycles+=l,this.channel1.tick(l),this.channel2.tick(l),this.channel3.tick(l),this.channel4.tick(l),this.frameSequencerCycles>=this.frameSequencerCyclesPerStep&&(this.advanceFrameSequencer(),this.frameSequencerCycles-=this.frameSequencerCyclesPerStep),this.sampleCycles>=this.cyclesPerSample&&(this.sampleAudio(),this.sampleCycles-=this.cyclesPerSample)}advanceFrameSequencer(){switch(this.frameSequencerStep){case 0:this.clockLength();break;case 2:this.clockLength(),this.clockSweep();break;case 4:this.clockLength();break;case 6:this.clockLength(),this.clockSweep();break;case 7:this.clockVolume();break}this.frameSequencerStep=(this.frameSequencerStep+1)%8}sampleAudio(){const l=(this.channel1.getSample()+this.channel2.getSample()+this.channel3.getSample()+this.channel4.getSample())/4;this.audioBufferPlayer.writeSample(l)}clockLength(){this.channel1.clockLength(),this.channel2.clockLength(),this.channel3.clockLength(),this.channel4.clockLength()}clockSweep(){this.channel1.clockSweep()}clockVolume(){this.channel1.clockVolume(),this.channel2.clockVolume(),this.channel4.clockVolume()}}s.APU=g}),define("cpu/memory_registers/InterruptRequestRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.InterruptRequestRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65295,n,"InterruptRequestRegister")}vBlankInterruptRequest(){return this.getBit(0)}lcdStatInterruptRequest(){return this.getBit(1)}timerInterruptRequest(){return this.getBit(2)}serialInterruptRequest(){return this.getBit(3)}joypadInterruptRequest(){return this.getBit(4)}clearVBlankRequest(){this.resetBit(0)}clearLcdStatRequest(){this.resetBit(1)}clearTimerRequest(){this.resetBit(2)}clearSerialRequest(){this.resetBit(3)}clearJoypadRequest(){this.resetBit(4)}triggerVBlankRequest(){this.setBit(0,1)}triggerLcdStatRequest(){this.setBit(1,1)}triggerTimerRequest(){this.setBit(2,1)}triggerSerialRequest(){this.setBit(3,1)}triggerJoypadRequest(){this.setBit(4,1)}}s.InterruptRequestRegister=t}),define("gpu/registers/BackgroundPaletteRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.BackgroundPaletteRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65351,n,"BackgroundPaletteRegister")}get color0(){return this.value&3}get color1(){return this.value>>2&3}get color2(){return this.value>>4&3}get color3(){return this.value>>6&3}get colors(){return[this.color0,this.color1,this.color2,this.color3]}}s.BackgroundPaletteRegister=t}),define("gpu/registers/LCDControlRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.LCDControlRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65344,n,"LCDControlRegister")}isBackgroundOn(){return this.getBit(0)===1}doesBgHavePriority(){return this.getBit(0)===1}isObjOn(){return this.getBit(1)===1}objSize(){return this.getBit(2)===0?8:16}bgTileMapArea(){return this.getBit(3)===0?38912:39936}bgAndWindowTileDataArea(){return this.getBit(4)===0?34816:32768}isWindowOn(){return this.getBit(5)===1}windowTileMapArea(){return this.getBit(6)===0?38912:39936}isLCDControllerOn(){return this.getBit(7)===1}}s.LCDControlRegister=t}),define("gpu/registers/ObjectPaletteRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.ObjectPaletteRegister=void 0;class t extends o.MemoryRegister{get color0(){return this.value&3}get color1(){return this.value>>2&3}get color2(){return this.value>>4&3}get color3(){return this.value>>6&3}get colors(){return[this.color0,this.color1,this.color2,this.color3]}}s.ObjectPaletteRegister=t}),define("gpu/registers/lcd_status/LCDMode",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.LCDMode=void 0;var o;(function(t){t[t.HBlank=0]="HBlank",t[t.VBlank=1]="VBlank",t[t.SearchingOAM=2]="SearchingOAM",t[t.TransferringToLCD=3]="TransferringToLCD"})(o||(s.LCDMode=o={}))}),define("gpu/registers/lcd_status/LCDStatusRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.LCDStatusRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65345,n,"LCDStatusRegister"),this.value=131}get mode(){return this.value&3}set mode(n){const i=n&1,g=n>>1&1;this.setBit(0,i),this.setBit(1,g)}isLineYCompareMatching(){return this.getBit(2)}isHBlankInterruptSelected(){return this.getBit(3)}isVBlankInterruptSelected(){return this.getBit(4)}isOamInterruptSelected(){return this.getBit(5)}isLineYMatchingInerruptSelected(){return this.getBit(6)}set lineYCompareMatching(n){this.setBit(2,n)}}s.LCDStatusRegister=t}),define("gpu/registers/GPURegisters",["require","exports","gpu/registers/BackgroundPaletteRegister","cpu/memory_registers/MemoryRegister","gpu/registers/LCDControlRegister","gpu/registers/ObjectPaletteRegister","gpu/registers/lcd_status/LCDStatusRegister","gpu/registers/BackgroundPaletteIndexRegister","gpu/registers/ObjectPaletteIndexRegister"],function(f,s,o,t,r,n,i,g,c){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.GPURegisters=void 0;class l{memory;lcdStatusRegister;lineYRegister;lcdControlRegister;scrollYRegister;scrollXRegister;lineYCompareRegister;windowYRegister;windowXRegister;backgroundPaletteRegister;objectPaletteRegister0;objectPaletteRegister1;backgroundPaletteIndexRegister;objectPaletteIndexRegister;constructor(y){this.memory=y,this.lcdStatusRegister=new i.LCDStatusRegister(y),this.lineYRegister=new t.MemoryRegister(65348,y,"lineYRegister"),this.lcdControlRegister=new r.LCDControlRegister(y),this.scrollYRegister=new t.MemoryRegister(65346,y,"scrollYRegister"),this.scrollXRegister=new t.MemoryRegister(65347,y,"scrollXRegister"),this.lineYCompareRegister=new t.MemoryRegister(65349,y,"lineYCompareRegister"),this.windowYRegister=new t.MemoryRegister(65354,y,"windowYRegister"),this.windowXRegister=new t.MemoryRegister(65355,y,"windowXRegister"),this.backgroundPaletteRegister=new o.BackgroundPaletteRegister(y),this.objectPaletteRegister0=new n.ObjectPaletteRegister(65352,y,"objetPaletteRegister0"),this.objectPaletteRegister1=new n.ObjectPaletteRegister(65353,y,"objectPaletteRegister1"),this.backgroundPaletteIndexRegister=new g.BackgroundPaletteIndexRegister(y),this.objectPaletteIndexRegister=new c.ObjectPaletteIndexRegister(y),this.lcdControlRegister.value=131,this.lineYRegister.value=145}}s.GPURegisters=l}),define("gpu/registers/OAMTable",["require","exports","misc/BitOperations"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.OAMEntry=s.OAMTable=void 0;const t=65024,r=65183;class n{memory;entries=[];constructor(c){this.memory=c;for(let l=t;l<r;l+=4)this.entries.push(new i(l,c))}}s.OAMTable=n;class i{address;memory;constructor(c,l){this.address=c,this.memory=l}get yPosition(){return this.memory.readByte(this.address)}get xPosition(){return this.memory.readByte(this.address+1)}get tileIndex(){return this.memory.readByte(this.address+2)}get attributeFlags(){return this.memory.readByte(this.address+3)}get paletteNumber(){return(0,o.getBit)(this.attributeFlags,4)}get isXFlipped(){return(0,o.getBit)(this.attributeFlags,5)}get isYFlipped(){return(0,o.getBit)(this.attributeFlags,6)}get bgAndWindowOverObj(){return(0,o.getBit)(this.attributeFlags,7)}get cgbPaletteNumber(){return this.attributeFlags&7}get tileVramBankNumber(){return(0,o.getBit)(this.attributeFlags,3)}}s.OAMEntry=i}),define("gpu/GPU",["require","exports","cpu/Memory","cpu/memory_registers/InterruptRequestRegister","misc/BitOperations","gpu/registers/GPURegisters","gpu/registers/OAMTable","gpu/registers/lcd_status/LCDMode"],function(f,s,o,t,r,n,i,g){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.GPU=void 0;const c=204,l=80,d=172,y=c+l+d,e=4560,a=144,h=[{red:255,green:255,blue:255},{red:192,green:192,blue:192},{red:96,green:96,blue:96},{red:0,green:0,blue:0}];class p{static screenWidth=160;static screenHeight=144;static offscreenHeight=154;static CyclesPerFrame=y*a+e;windowPixelsDrawn=[];backgroundPixelsDrawn=[];backgroundPixelPriorities=[];cycles=0;internalWindowLineCounter=0;isGBC=!1;colors=h;memory;registers;screen=new ImageData(p.screenWidth,p.screenHeight);oamTable;constructor(R){this.memory=R,this.registers=new n.GPURegisters(R),this.oamTable=new i.OAMTable(R),this.registers.lineYRegister.value=145}tick(R){const b=new t.InterruptRequestRegister(this.memory);if(!this.registers.lcdControlRegister.isLCDControllerOn()){this.registers.lcdStatusRegister.mode=g.LCDMode.HBlank,this.registers.lineYRegister.value=145,this.cycles=0;return}switch(this.cycles+=R,this.registers.lcdStatusRegister.mode){case g.LCDMode.HBlank:this.cycles>=c&&(this.isGBC&&this.isHDMATransferActive()&&this.memory.doHblankHdmaTransfer(),this.drawLine(),this.registers.lineYRegister.value++,this.registers.lineYRegister.value===p.screenHeight?(this.registers.lcdStatusRegister.mode=g.LCDMode.VBlank,b.triggerVBlankRequest()):this.registers.lcdStatusRegister.mode=g.LCDMode.SearchingOAM,this.cycles-=c);break;case g.LCDMode.VBlank:this.cycles>=y&&(this.registers.lcdStatusRegister.lineYCompareMatching=this.registers.lineYCompareRegister.value===this.registers.lineYRegister.value?1:0,this.registers.lcdStatusRegister.isLineYCompareMatching()&&this.registers.lcdStatusRegister.isLineYMatchingInerruptSelected()&&b.triggerLcdStatRequest(),this.registers.lineYRegister.value++,this.registers.lineYRegister.value===p.offscreenHeight&&(this.registers.lcdStatusRegister.mode=g.LCDMode.SearchingOAM,this.registers.lineYRegister.value=0,this.internalWindowLineCounter=0),this.cycles-=y);break;case g.LCDMode.SearchingOAM:this.cycles>=l&&(this.registers.lcdStatusRegister.mode=g.LCDMode.TransferringToLCD,this.cycles-=l);break;case g.LCDMode.TransferringToLCD:if(this.cycles>=d){const{lcdStatusRegister:C}=this.registers;(C.isHBlankInterruptSelected()||C.isVBlankInterruptSelected()||C.isOamInterruptSelected())&&b.triggerLcdStatRequest(),this.registers.lcdStatusRegister.lineYCompareMatching=this.registers.lineYCompareRegister.value===this.registers.lineYRegister.value?1:0,this.registers.lcdStatusRegister.isLineYCompareMatching()&&this.registers.lcdStatusRegister.isLineYMatchingInerruptSelected()&&b.triggerLcdStatRequest(),this.registers.lcdStatusRegister.mode=g.LCDMode.HBlank,this.cycles-=d}break}}isHDMATransferActive(){const R=this.memory.readByte(65365);return(0,r.getBit)(R,7)===1&&R!==255}drawLine(){const{lcdControlRegister:R}=this.registers;this.backgroundPixelsDrawn=[],this.windowPixelsDrawn=[],this.isGBC?(this.backgroundPixelPriorities=[],this.drawBackgroundLineGBC(),R.isWindowOn()&&this.drawWindowLineGBC(),R.isObjOn()&&this.drawSpriteLineGBC()):(this.drawBackgroundLine(),R.isWindowOn()&&this.drawWindowLine(),R.isObjOn()&&this.drawSpriteLine())}drawBackgroundLineGBC(){const{lineYRegister:R,lcdControlRegister:b,scrollXRegister:C,scrollYRegister:u,backgroundPaletteIndexRegister:m}=this.registers,x=b.bgAndWindowTileDataArea(),T=x===34816?128:0,B=M=>x===34816?this.memory.readSignedByte(M):this.memory.readByte(M);for(let M=0;M<p.screenWidth;M++){const A=C.value+M&255,L=u.value+R.value&255,D=Math.floor(L/8)*32+Math.floor(A/8),v=A%8;let F=L%8;const O=B(b.bgTileMapArea()+D)+T,P=this.memory.readByte(b.bgTileMapArea()+D,1),k=P&7,H=(0,r.getBit)(P,3),U=(0,r.getBit)(P,5),_=(0,r.getBit)(P,6),I=(0,r.getBit)(P,7),w=4,S=2,q=k*w*S,V=this.getPaletteColors(q,o.Memory.BgpdRegisterAddress,m);_&&(F=7-F);const W=F*2,j=x+O*16+W,N=this.memory.readByte(j,H),$=this.memory.readByte(j+1,H),z=U?v:7-v,Y=(0,r.getBit)(N,z),Z=(0,r.getBit)($,z)<<1,X=Y+Z,K=V[X];this.backgroundPixelsDrawn.push(X!==0),this.backgroundPixelPriorities.push(I),this.drawPixel(M,R.value,K.red,K.green,K.blue)}}drawWindowLineGBC(){const{lineYRegister:R,lcdControlRegister:b,windowXRegister:C,windowYRegister:u,backgroundPaletteIndexRegister:m}=this.registers;if(R.value<u.value||C.value>p.screenWidth+7)return;const x=b.bgAndWindowTileDataArea(),T=v=>x===34816?this.memory.readSignedByte(v):this.memory.readByte(v);let B=0,M=C.value-7;const A=x===34816?128:0,L=b.windowTileMapArea(),D=this.internalWindowLineCounter;for(;B<p.screenWidth;){if(B<M){this.windowPixelsDrawn.push(!1),B++;continue}const v=B-M,F=Math.floor(v/8)+Math.floor(D/8)*32,O=T(L+F)+A,P=this.memory.readByte(L+F,1),k=P&7,H=(0,r.getBit)(P,3),U=(0,r.getBit)(P,5),_=(0,r.getBit)(P,6),I=(0,r.getBit)(P,7);let w=D%8;_&&(w=7-w);const S=w*2,q=4,V=2,W=k*q*V,j=this.getPaletteColors(W,o.Memory.BgpdRegisterAddress,m),N=x+O*16+S,$=this.memory.readByte(N,H),z=this.memory.readByte(N+1,H);for(let Y=7;Y>=0;Y--){const Z=U?7-Y:Y,X=(0,r.getBit)($,Z),K=(0,r.getBit)(z,Z)<<1,G=X+K,J=j[G];this.windowPixelsDrawn.push(G!==0),this.backgroundPixelPriorities[B]=I,this.drawPixel(B,R.value,J.red,J.green,J.blue),B++}}this.internalWindowLineCounter++}getPaletteColors(R,b,C){const u=[];let m=0;for(;u.length<4;){C.paletteAddress=R+m;const x=this.memory.readByte(b);m++,C.paletteAddress=R+m;const T=this.memory.readByte(b);let B=x&31,M=(x>>5)+((T&3)<<3),A=T>>2&31;B=B<<3|B>>2,M=M<<3|M>>2,A=A<<3|A>>2,u.push({red:B,green:M,blue:A}),m++}return u}drawSpriteLineGBC(){const{lineYRegister:R,lcdControlRegister:b,objectPaletteIndexRegister:C}=this.registers,u=32768,m=10;let x=0;const T=[];for(const B of this.oamTable.entries){if(x===m)break;const M=B.yPosition-16,A=B.xPosition-8;let L=R.value-M;if(B.isYFlipped&&(L=b.objSize()-1-L),L<0||L>=b.objSize())continue;const v=(b.objSize()===16?(0,r.resetBit)(B.tileIndex,0):B.tileIndex)*16,F=L*2,O=v+F+u,P=B.cgbPaletteNumber,k=4,H=2,U=P*k*H,_=this.getPaletteColors(U,o.Memory.ObpdRegisterAddress,C),I=this.memory.readByte(O,B.tileVramBankNumber),w=this.memory.readByte(O+1,B.tileVramBankNumber);for(let S=0;S<8;S++){const q=B.isXFlipped?S:7-S,V=(0,r.getBit)(I,q),W=(0,r.getBit)(w,q)<<1,j=V+W;if(j===0||A+S<0)continue;const N=_[j],$=this.backgroundPixelsDrawn[A+S],z=this.windowPixelsDrawn[A+S];!(!this.spriteHasPriority(B,this.backgroundPixelPriorities[A+S])&&(z||$))&&!T[A+S]&&(T[A+S]=!0,this.drawPixel(A+S,R.value,N.red,N.green,N.blue))}x++}}drawSpriteLine(){const{lineYRegister:R,lcdControlRegister:b}=this.registers,C=32768,u=this.oamTable.entries.filter(m=>{const x=m.yPosition-16;if(m.xPosition===0||m.yPosition===0||m.xPosition>p.screenWidth+8||m.yPosition>p.screenHeight+16)return!1;let T=R.value-x;return m.isYFlipped&&(T=b.objSize()-1-T),T>=0&&T<b.objSize()}).slice(0,10).reverse().sort((m,x)=>x.xPosition-m.xPosition);for(const m of u){const x=m.yPosition-16,T=m.xPosition-8;let B=R.value-x;m.isYFlipped&&(B=b.objSize()-1-B);const A=(b.objSize()===16?(0,r.resetBit)(m.tileIndex,0):m.tileIndex)*16,L=B*2,D=A+L+C,v=this.memory.readByte(D),F=this.memory.readByte(D+1),O=m.paletteNumber===0?this.registers.objectPaletteRegister0.colors:this.registers.objectPaletteRegister1.colors;for(let P=0;P<8;P++){const k=m.isXFlipped?P:7-P,H=(0,r.getBit)(v,k),U=(0,r.getBit)(F,k)<<1,_=H+U;if(_===0||T+P<0)continue;const I=O[_],w=this.colors[I],S=this.backgroundPixelsDrawn[T+P],q=this.windowPixelsDrawn[T+P];m.bgAndWindowOverObj&&(q||S)||this.drawPixel(T+P,R.value,w.red,w.green,w.blue)}}}drawBackgroundLine(){const{lineYRegister:R,lcdControlRegister:b,scrollXRegister:C,scrollYRegister:u}=this.registers,m=b.bgAndWindowTileDataArea(),x=m===34816?128:0,T=M=>m===34816?this.memory.readSignedByte(M):this.memory.readByte(M),B=this.registers.backgroundPaletteRegister.colors;for(let M=0;M<p.screenWidth;M++)if(b.isBackgroundOn()){const A=C.value+M&255,L=u.value+R.value&255,D=Math.floor(L/8)*32+Math.floor(A/8),v=L%8,F=A%8,O=v*2,P=T(b.bgTileMapArea()+D)+x,k=m+P*16+O,H=this.memory.readByte(k),U=this.memory.readByte(k+1),_=7-F,I=(0,r.getBit)(H,_),w=(0,r.getBit)(U,_)<<1,S=I+w,q=B[S],V=this.colors[q];this.backgroundPixelsDrawn.push(S!==0),this.drawPixel(M,R.value,V.red,V.green,V.blue)}else{const A=B[0],L=this.colors[A];this.drawPixel(M,R.value,L.red,L.green,L.blue)}}drawWindowLine(){const{lineYRegister:R,lcdControlRegister:b,windowXRegister:C,windowYRegister:u}=this.registers;if(R.value<u.value||C.value>p.screenWidth+7)return;const m=b.bgAndWindowTileDataArea(),x=v=>m===34816?this.memory.readSignedByte(v):this.memory.readByte(v),T=this.registers.backgroundPaletteRegister.colors;let B=0,M=C.value-7;const A=m===34816?128:0,L=b.windowTileMapArea(),D=this.internalWindowLineCounter;for(;B<p.screenWidth;){if(B<M){this.windowPixelsDrawn.push(!1),B++;continue}const v=B-M,F=Math.floor(v/8)+Math.floor(D/8)*32,P=D%8*2,k=x(L+F)+A,H=m+k*16+P,U=this.memory.readByte(H),_=this.memory.readByte(H+1);for(let I=7;I>=0;I--){const w=(0,r.getBit)(U,I),S=(0,r.getBit)(_,I)<<1,q=w+S,V=T[q],W=this.colors[V];this.windowPixelsDrawn.push(q!==0),this.drawPixel(B,R.value,W.red,W.green,W.blue),B++}}this.internalWindowLineCounter++}spriteHasPriority(R,b){const{bgAndWindowOverObj:C}=R,{lcdControlRegister:u}=this.registers;return!u.doesBgHavePriority()||!C&&!b}drawPixel(R,b,C,u,m,x=255){const T=R*4+b*this.screen.width*4;this.screen.data[T]=C,this.screen.data[T+1]=u,this.screen.data[T+2]=m,this.screen.data[T+3]=x}}s.GPU=p}),define("cpu/memory_registers/InterruptEnableRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.InterruptEnableRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65535,n,"InterruptEnableRegister")}isVBlankInterruptEnabled(){return this.getBit(0)}isLCDStatInterruptEnabled(){return this.getBit(1)}isTimerInterruptEnabled(){return this.getBit(2)}isSerialInterruptEnabled(){return this.getBit(3)}isJoypadInterruptEnabled(){return this.getBit(4)}}s.InterruptEnableRegister=t}),define("cpu/CPURegister",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.CPURegister=void 0;class o{name;registerId;dataView;is16Bit;constructor(r,n,i,g,c){this.name=r,this.registerId=i,this.dataView=g,this.is16Bit=c,this.value=n}get value(){return this.is16Bit?this.dataView.getUint16(this.registerId,!0):this.dataView.getUint8(this.registerId)}get hexValue(){return`0x${this.value.toString(16)}`}set value(r){this.is16Bit?this.dataView.setUint16(this.registerId,r,!0):this.dataView.setUint8(this.registerId,r)}setBit(r,n){let i=this.resetBit(r);n===1&&(i|=n<<r),this.value=i}resetBit(r){return this.value&~(1<<r)}}s.CPURegister=o}),define("cpu/CPUFlagRegister",["require","exports","cpu/CPURegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.FlagsRegister=void 0;const t=7,r=6,n=5,i=4;class g extends o.CPURegister{get zero(){return(this.value>>t&1)===1}get subtract(){return(this.value>>r&1)===1}get halfCarry(){return(this.value>>n&1)===1}get carry(){return(this.value>>i&1)===1}set zero(l){l?this.value|=1<<t:this.value&=~(1<<t)}set subtract(l){l?this.value|=1<<r:this.value&=~(1<<r)}set halfCarry(l){l?this.value|=1<<n:this.value&=~(1<<n)}set carry(l){l?this.value|=1<<i:this.value&=~(1<<i)}}s.FlagsRegister=g}),define("cpu/FlagsRegisterPair",["require","exports","cpu/CPURegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.FlagsRegisterPair=void 0;class t extends o.CPURegister{set value(n){this.dataView.setUint16(this.registerId,n&65520,!0)}get value(){return this.dataView.getUint16(this.registerId,!0)}get hexValue(){return`0x${this.value.toString(16)}`}}s.FlagsRegisterPair=t}),define("cpu/memory_registers/TimerControlRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.TimerControlRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65287,n)}isTimerEnabled(){return this.getBit(2)}getClockFrequency(){const n=this.value&3;let i=0;switch(n){case 0:i=1024;break;case 1:i=16;break;case 2:i=64;break;case 3:i=256;break}return i}}s.TimerControlRegister=t}),define("cpu/memory_registers/DividerRegister",["require","exports","cpu/memory_registers/MemoryRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.DividerRegister=void 0;class t extends o.MemoryRegister{constructor(n){super(65284,n)}set overrideValue(n){this.memory.writeByte(this.address,n,"DividerRegister",!0)}}s.DividerRegister=t}),define("cpu/CPURegisters",["require","exports","cpu/memory_registers/InterruptEnableRegister","cpu/memory_registers/InterruptRequestRegister","cpu/CPURegister","cpu/CPUFlagRegister","cpu/FlagsRegisterPair","cpu/memory_registers/MemoryRegister","cpu/memory_registers/TimerControlRegister","cpu/memory_registers/DividerRegister"],function(f,s,o,t,r,n,i,g,c,l){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.CPURegisters=void 0;class d{A;B;C;D;E;F;H;L;AF;BC;DE;HL;SP;PC;interruptEnableRegister;interruptRequestRegister;dividerRegister;timerCounterRegister;timerModuloRegister;timerControlRegister;memory;registerDataView;cpu;constructor(e,a){this.cpu=a,this.registerDataView=new DataView(new ArrayBuffer(12)),this.A=new r.CPURegister("A",0,1,this.registerDataView,!1),this.B=new r.CPURegister("B",0,3,this.registerDataView,!1),this.C=new r.CPURegister("C",0,2,this.registerDataView,!1),this.D=new r.CPURegister("D",0,5,this.registerDataView,!1),this.E=new r.CPURegister("E",0,4,this.registerDataView,!1),this.F=new n.FlagsRegister("F",0,0,this.registerDataView,!1),this.H=new r.CPURegister("H",0,7,this.registerDataView,!1),this.L=new r.CPURegister("L",0,6,this.registerDataView,!1),this.AF=new i.FlagsRegisterPair("AF",4528,0,this.registerDataView,!0),this.BC=new r.CPURegister("BC",19,2,this.registerDataView,!0),this.DE=new r.CPURegister("DE",216,4,this.registerDataView,!0),this.HL=new r.CPURegister("HL",333,6,this.registerDataView,!0),this.SP=new r.CPURegister("SP",65534,8,this.registerDataView,!0),this.PC=new r.CPURegister("PC",256,10,this.registerDataView,!0),this.memory=e,this.interruptEnableRegister=new o.InterruptEnableRegister(e),this.interruptRequestRegister=new t.InterruptRequestRegister(e),this.dividerRegister=new l.DividerRegister(e),this.timerCounterRegister=new g.MemoryRegister(65285,e),this.timerModuloRegister=new g.MemoryRegister(65286,e),this.timerControlRegister=new c.TimerControlRegister(e)}initialize(){this.AF.value=4480,this.BC.value=0,this.DE.value=65366,this.HL.value=13,this.SP.value=65534,this.PC.value=256}add(e,a){e.value=this._add(e.value,a.value)}_add(e,a){const h=e+a&255;return this.F.subtract=!1,this.F.zero=h===0,this.F.halfCarry=(h&15)<(e&15),this.F.carry=h<e,h}_subtract(e,a){const h=e-a&255;return this.F.subtract=!0,this.F.zero=h===0,this.F.halfCarry=(h&15)>(e&15),this.F.carry=h>e,h}addImmediate(e){const a=this.memory.readByte(this.PC.value);this.PC.value++,e.value=this._add(e.value,a)}addImmediateSigned(e){if(!e.is16Bit)throw new Error(`invalid register selected: ${e.name}. Must be a 16 bit register`);const a=this.memory.readSignedByte(this.PC.value);this.PC.value++;const h=15-(this.SP.value&15),p=255-(this.SP.value&255);this.F.carry=(a&255)>p,this.F.halfCarry=(a&15)>h,this.F.zero=!1,this.F.subtract=!1,this.SP.value+=a}addFromRegisterAddr(e,a){const h=this.memory.readByte(a.value);e.value=this._add(e.value,h)}_addWithCarry(e,a){const h=this.F.carry?1:0,p=e+a+h&255;return this.F.carry=e+a+h>255,this.F.subtract=!1,this.F.halfCarry=(e&15)+(a&15)+h>15,this.F.zero=p===0,p}addWithCarry(e){this.A.value=this._addWithCarry(this.A.value,e.value)}addWithCarryImmediate(){this.A.value=this._addWithCarry(this.A.value,this.memory.readByte(this.PC.value)),this.PC.value++}loadHLStackPointer(){const e=this.memory.readSignedByte(this.PC.value);this.PC.value++;const a=15-(this.SP.value&15),h=255-(this.SP.value&255);this.F.halfCarry=(e&15)>a,this.F.carry=(e&255)>h,this.F.zero=!1,this.F.subtract=!1,this.HL.value=this.SP.value+e}addWithCarryFromMemory(e){const a=this.memory.readByte(e.value);this.A.value=this._addWithCarry(this.A.value,a)}complementCarryFlag(){this.F.subtract=!1,this.F.halfCarry=!1,this.F.carry=!this.F.carry}setCarryFlag(){this.F.subtract=!1,this.F.halfCarry=!1,this.F.carry=!0}readByte(e){e.value=this.memory.readByte(this.PC.value),this.PC.value++}loadFromBase(e){this.cpu.cycle(4);const a=this.memory.readByte(this.PC.value);this.PC.value++,e.value=this.memory.readByte(65280+a),this.cpu.cycle(4),this.cpu.cycle(4)}loadFrom16bitAddr(e){this.cpu.cycle(4),this.cpu.cycle(4);const a=this.memory.readWord(this.PC.value);this.PC.value+=2,e.value=this.memory.readByte(a),this.cpu.cycle(4),this.cpu.cycle(4)}loadByte(e,a){if(!a.is16Bit)throw new Error(`Register is not 16 bit: ${a.name}`);e.value=this.memory.readByte(a.value)}loadByte8Bit(e,a){if(a.is16Bit)throw new Error(`Register is not 8 bit: ${a.name}`);e.value=this.memory.readByte(65280+a.value)}loadByteAndIncrementSource(e,a){e.value=this.memory.readByte(a.value),a.value++}loadByteAndDecrementSource(e,a){e.value=this.memory.readByte(a.value),a.value--}loadWord(e){if(e.is16Bit)e.value=this.memory.readWord(this.PC.value),this.PC.value+=2;else throw new Error(`invalid register selected: ${e.name}. must be a 16 bit register.`)}jump(){this.PC.value=this.memory.readWord(this.PC.value)}jumpToRegisterAddr(){this.PC.value=this.HL.value}jumpIfNotZero(){this.F.zero?this.PC.value+=2:this.PC.value=this.memory.readWord(this.PC.value)}jumpIfZero(){this.F.zero?this.PC.value=this.memory.readWord(this.PC.value):this.PC.value+=2}jumpIfNotCarry(){this.F.carry?this.PC.value+=2:this.PC.value=this.memory.readWord(this.PC.value)}jumpIfCarry(){this.F.carry?this.PC.value=this.memory.readWord(this.PC.value):this.PC.value+=2}relativeJump(){const e=this.memory.readSignedByte(this.PC.value);this.PC.value++,this.PC.value+=e}relativeJumpIfZero(){if(this.F.zero){const e=this.memory.readSignedByte(this.PC.value);this.PC.value++,this.PC.value+=e}else this.PC.value++}relativeJumpIfNotZero(){if(this.F.zero)this.PC.value++;else{const e=this.memory.readSignedByte(this.PC.value);this.PC.value++,this.PC.value+=e}}relativeJumpIfCarry(){if(this.F.carry){const e=this.memory.readSignedByte(this.PC.value);this.PC.value++,this.PC.value+=e}else this.PC.value++}relativeJumpIfNotCarry(){if(this.F.carry)this.PC.value++;else{const e=this.memory.readSignedByte(this.PC.value);this.PC.value++,this.PC.value+=e}}writeToMemory8Bit(e){this.cpu.cycle(4);const a=this.memory.readByte(this.PC.value);this.PC.value++,this.memory.writeByte(65280+a,e.value,"writeToMemory8Bit"),this.cpu.cycle(4),this.cpu.cycle(4)}writeToMemory16bit(e){this.cpu.cycle(4),this.cpu.cycle(4);const a=this.memory.readWord(this.PC.value);this.PC.value+=2,this.memory.writeByte(a,e.value,"writeToMemory16bit"),this.cpu.cycle(4),this.cpu.cycle(4)}writeStackPointerToMemory(){const e=this.memory.readWord(this.PC.value);this.PC.value+=2,this.memory.writeWord(e,this.SP.value)}writeToMemoryRegisterAddr(e,a){if(e.is16Bit)this.memory.writeByte(e.value,a.value,"writeToMemoryRegisterAddr");else throw new Error(`invalid register selected: ${e.name}; need a 16 bit register.`)}writeToMemoryRegisterAddr8bit(e,a){if(!e.is16Bit)this.memory.writeByte(65280+e.value,a.value,"writeToMemoryRegisterAddr8Bit");else throw new Error(`invalid register selected: ${e.name} need an 8 bit register.`)}writeByteIntoRegisterAddress(e){if(e.is16Bit)this.cpu.cycle(4),this.memory.writeByte(e.value,this.memory.readByte(this.PC.value),"writeByteIntoRegisterAddr"),this.PC.value++,this.cpu.cycle(4),this.cpu.cycle(4);else throw new Error(`invalid register selected: ${e.name}; need a 16 bit register.`)}subtract(e){this.A.value=this._subtract(this.A.value,e.value)}subtractImmediate(){this.A.value=this._subtract(this.A.value,this.memory.readByte(this.PC.value)),this.PC.value++}_subtractWithCarry(e,a){const h=this.F.carry?1:0,p=e-a-h&255;return this.F.subtract=!0,this.F.carry=e-a-h<0,this.F.halfCarry=(e&15)-(a&15)-h<0,this.F.zero=p===0,p}subtractWithCarry(e){this.A.value=this._subtractWithCarry(this.A.value,e.value)}subtractWithCarryFromMemory(e){const a=this.memory.readByte(e.value);this.A.value=this._subtractWithCarry(this.A.value,a)}subtractWithCarryImmediate(){const e=this.memory.readByte(this.PC.value);this.PC.value++,this.A.value=this._subtractWithCarry(this.A.value,e)}compare(e){this._subtract(this.A.value,e.value)}compareImmediate(){this._subtract(this.A.value,this.memory.readByte(this.PC.value)),this.PC.value++}compareFromRegisterAddr(e){const a=this.memory.readByte(e.value);this._subtract(this.A.value,a)}subtractFromMemory(e){const a=this.memory.readByte(e.value);this.A.value=this._subtract(this.A.value,a)}load(e,a){e.value=a.value}_or(e,a){const h=(e|a)&255;return this.F.carry=!1,this.F.zero=h===0,this.F.halfCarry=!1,this.F.subtract=!1,h}or(e){this.A.value=this._or(this.A.value,e.value)}orFromMemory(e){this.A.value=this._or(this.A.value,this.memory.readByte(e.value))}orImmediate(){this.A.value=this._or(this.A.value,this.memory.readByte(this.PC.value)),this.PC.value++}_and(e,a){const h=e&a&255;return this.F.carry=!1,this.F.halfCarry=!0,this.F.subtract=!1,this.F.zero=h===0,h}and(e){this.A.value=this._and(this.A.value,e.value)}andFromMemory(e){this.A.value=this._and(this.A.value,this.memory.readByte(e.value))}andImmediate(){this.A.value=this._and(this.A.value,this.memory.readByte(this.PC.value)),this.PC.value++}_xor(e,a){const h=(e^a)&255;return this.F.carry=!1,this.F.halfCarry=!1,this.F.subtract=!1,this.F.zero=h===0,h}xor(e){this.A.value=this._xor(this.A.value,e.value)}xorImmediate(){this.A.value=this._xor(this.A.value,this.memory.readByte(this.PC.value)),this.PC.value++}xorFromMemory(e){this.A.value=this._xor(this.A.value,this.memory.readByte(e.value))}increment(e){const a=e.value+1&255;this.F.subtract=!1,this.F.zero=a===0,this.F.halfCarry=(a&15)<(e.value&15),e.value=a}decrement(e){const a=e.value-1&255;this.F.subtract=!0,this.F.zero=a===0,this.F.halfCarry=(a&15)>(e.value&15),e.value=a}add16Bit(e,a){if(!e.is16Bit||!a.is16Bit)throw new Error(`Invalid registers: ${e.name} and ${a.name}`);const h=e.value+a.value&65535;this.F.subtract=!1,this.F.halfCarry=(h&4095)<(e.value&4095),this.F.carry=h<e.value,e.value=h}rotateLeft(){const e=this.A.value>>7;this.F.carry=e===1,this.F.halfCarry=!1,this.F.zero=!1,this.F.subtract=!1,this.A.value=(this.A.value<<1)+e}rotateLeftCarry(){const e=this.F.carry?1:0,a=this.A.value>>7,h=(this.A.value<<1)+e&255;this.F.carry=a===1,this.F.halfCarry=!1,this.F.subtract=!1,this.F.zero=!1,this.A.value=h}rotateRegisterLeft(e){this.cpu.cycle(4);const a=e.value>>7&1;e.value=(e.value<<1)+a,this.F.zero=e.value===0,this.F.carry=a===1,this.F.subtract=!1,this.F.halfCarry=!1,this.cpu.cycle(4)}rotateRegisterLeftCarry(e){this.cpu.cycle(4);const a=e.value>>7,h=this.F.carry?1:0,p=(e.value<<1)+h&255;this.F.carry=a===1,this.F.halfCarry=!1,this.F.subtract=!1,this.F.zero=p===0,e.value=p,this.cpu.cycle(4)}rotateAtRegisterAddrLeftCarry(){this.cpu.cycle(4);const e=this.memory.readByte(this.HL.value);this.cpu.cycle(4);const a=e>>7,h=(e<<1)+(this.F.carry?1:0)&255;this.F.carry=a===1,this.F.halfCarry=!1,this.F.subtract=!1,this.F.zero=h===0,this.memory.writeByte(this.HL.value,h),this.cpu.cycle(4),this.cpu.cycle(4)}rotateRegisterRight(e){this.cpu.cycle(4);const a=e.value&1;e.value=(e.value>>1)+(a<<7),this.F.zero=e.value===0,this.F.carry=a===1,this.F.subtract=!1,this.F.halfCarry=!1,this.cpu.cycle(4)}rotateRegisterRightCarry(e){this.cpu.cycle(4);const a=e.value&1,h=this.F.carry?1:0;e.value=(e.value>>1&255)+(h<<7),this.F.carry=a===1,this.F.zero=e.value===0,this.F.halfCarry=!1,this.F.subtract=!1,this.cpu.cycle(4)}rotateAtRegisterAddrRightCarry(){this.cpu.cycle(4);const e=this.memory.readByte(this.HL.value);this.cpu.cycle(4);const a=e&1,h=(e>>1)+((this.F.carry?1:0)<<7);this.F.carry=a===1,this.F.zero=h===0,this.F.halfCarry=!1,this.F.subtract=!1,this.memory.writeByte(this.HL.value,h),this.cpu.cycle(4),this.cpu.cycle(4)}rotateValueAtRegisterAddrLeft(){this.cpu.cycle(4);const e=this.memory.readByte(this.HL.value);this.cpu.cycle(4);const a=e>>7&1,h=(e<<1)+a;this.F.zero=h===0,this.F.carry=a===1,this.F.subtract=!1,this.F.halfCarry=!1,this.memory.writeByte(this.HL.value,h),this.cpu.cycle(4),this.cpu.cycle(4)}rotateValueAtRegisterAddrRight(){this.cpu.cycle(4);const e=this.memory.readByte(this.HL.value);this.cpu.cycle(4);const a=e&1,h=(e>>1)+(a<<7);this.F.zero=h===0,this.F.carry=a===1,this.F.subtract=!1,this.F.halfCarry=!1,this.memory.writeByte(this.HL.value,h),this.cpu.cycle(4),this.cpu.cycle(4)}rotateRight(){const e=this.A.value&1;this.F.carry=e===1,this.F.halfCarry=!1,this.F.zero=!1,this.F.subtract=!1,this.A.value=(this.A.value>>1)+(e<<7)}rotateRightCarry(){const e=this.A.value&1,a=this.F.carry?1:0;this.F.carry=e===1,this.F.zero=!1,this.F.halfCarry=!1,this.F.subtract=!1,this.A.value=(this.A.value>>1)+(a<<7)}writeToMemoryRegisterAddrAndIncrementTarget(e,a){this.memory.writeByte(e.value,a.value,"writeToMemoryRegisterAddrAndIncrementTarget"),e.value++}writeToMemoryRegisterAddrAndDecrementTarget(e,a){this.memory.writeByte(e.value,a.value,"writeToMemoryRegisterAddrAndDecrementTarget"),e.value--}decimalAdjustAccumulator(){const{A:e,F:a}=this,h=a.subtract?-6:6,p=a.subtract?-96:96,E=!a.subtract&&(e.value&15)>9,R=!a.subtract&&e.value>153;(a.halfCarry||E)&&(e.value+=h),(a.carry||R)&&(e.value+=p,a.carry=!0),a.zero=e.value===0,a.halfCarry=!1}complementAccumulator(){this.A.value=~this.A.value,this.F.subtract=!0,this.F.halfCarry=!0}incrementMemoryValAtRegisterAddr(e){const a=this.memory.readByte(e.value),h=a+1&255;this.cpu.cycle(4),this.F.subtract=!1,this.F.zero=h===0,this.F.halfCarry=(h&15)<(a&15),this.memory.writeByte(e.value,h,"incrementMemoryValAtRegisterAddr"),this.cpu.cycle(4),this.cpu.cycle(4)}decrementMemoryValAtRegisterAddr(e){const a=this.memory.readByte(e.value),h=a-1&255;this.cpu.cycle(4),this.F.subtract=!0,this.F.zero=h===0,this.F.halfCarry=(h&15)>(a&15),this.memory.writeByte(e.value,h,"decrementMemoryValAtRegisterAddr"),this.cpu.cycle(4),this.cpu.cycle(4)}callFunction(){const e=this.memory.readWord(this.PC.value);this.PC.value+=2,this.pushToStack(this.PC.value),this.PC.value=e}callFunctionIfNotZero(){this.F.zero?this.PC.value+=2:this.callFunction()}callFunctionIfZero(){this.F.zero?this.callFunction():this.PC.value+=2}callFunctionIfNotCarry(){this.F.carry?this.PC.value+=2:this.callFunction()}callFunctionIfCarry(){this.F.carry?this.callFunction():this.PC.value+=2}returnFromFunction(){this.PC.value=this.popFromStack()}returnFromFunctionIfNotZero(){this.F.zero||this.returnFromFunction()}returnFromFunctionIfZero(){this.F.zero&&this.returnFromFunction()}returnFromFunctionIfCarry(){this.F.carry&&this.returnFromFunction()}returnFromFunctionIfNotCarry(){this.F.carry||this.returnFromFunction()}popFromStack(){const e=this.memory.readWord(this.SP.value);return this.SP.value+=2,e}restart(e){this.pushToStack(this.PC.value),this.PC.value=e}pushToStack(e){this.SP.value-=2,this.memory.writeWord(this.SP.value,e)}popToRegister(e){e.value=this.popFromStack()}pushFromRegister(e){this.pushToStack(e.value)}swap(e){this.cpu.cycle(4);const a=e.value&15,h=e.value>>4;e.value=(a<<4)+h,this.F.zero=e.value===0,this.F.carry=!1,this.F.subtract=!1,this.F.halfCarry=!1,this.cpu.cycle(4)}swapAtRegisterAddr(){this.cpu.cycle(4);let e=this.memory.readByte(this.HL.value);this.cpu.cycle(4);const a=e&15,h=e>>4,p=(a<<4)+h;this.F.zero=p===0,this.F.carry=!1,this.F.subtract=!1,this.F.halfCarry=!1,this.memory.writeByte(this.HL.value,p),this.cpu.cycle(4),this.cpu.cycle(4)}testBit(e,a){this.cpu.cycle(4);const h=a.value>>e&1;this.F.zero=h===0,this.F.halfCarry=!0,this.F.subtract=!1,this.cpu.cycle(4)}testBitAtRegisterAddr(e){this.cpu.cycle(4);const a=this.memory.readByte(this.HL.value);this.cpu.cycle(4);const h=a>>e&1;this.F.zero=h===0,this.F.halfCarry=!0,this.F.subtract=!1,this.cpu.cycle(4)}resetBit(e,a){this.cpu.cycle(4),a.value=a.value&~(1<<e),this.cpu.cycle(4)}resetBitAtRegisterAddr(e){this.cpu.cycle(4);let a=this.memory.readByte(this.HL.value);this.cpu.cycle(4),a=a&~(1<<e),this.memory.writeByte(this.HL.value,a),this.cpu.cycle(4),this.cpu.cycle(4)}shiftLeft(e){this.cpu.cycle(4);const a=e.value>>7&1;e.value=e.value<<1&255,this.F.carry=a===1,this.F.subtract=!1,this.F.halfCarry=!1,this.F.zero=e.value===0,this.cpu.cycle(4)}shiftLeftAtRegisterAddr(){this.cpu.cycle(4);let e=this.memory.readByte(this.HL.value);this.cpu.cycle(4);const a=e>>7&1;e=e<<1&255,this.F.carry=a===1,this.F.subtract=!1,this.F.halfCarry=!1,this.F.zero=e===0,this.memory.writeByte(this.HL.value,e),this.cpu.cycle(4),this.cpu.cycle(4)}shiftRight(e){this.cpu.cycle(4);const a=e.value>>7,h=e.value&1;e.value=e.value>>1&255,e.setBit(7,a),this.F.carry=h===1,this.F.subtract=!1,this.F.halfCarry=!1,this.F.zero=e.value===0,this.cpu.cycle(4)}shiftRightCarry(e){this.cpu.cycle(4);const a=e.value&1;e.value=e.value>>1&255,this.F.carry=a===1,this.F.zero=e.value===0,this.F.subtract=!1,this.F.halfCarry=!1,this.cpu.cycle(4)}shiftRightCarryAtRegisterAddr(){this.cpu.cycle(4);let e=this.memory.readByte(this.HL.value);this.cpu.cycle(4);const a=e&1;e=e>>1&255,e=e&-129,this.F.carry=a===1,this.F.zero=e===0,this.F.subtract=!1,this.F.halfCarry=!1,this.memory.writeByte(this.HL.value,e),this.cpu.cycle(4),this.cpu.cycle(4)}shiftRightAtRegisterAddr(){this.cpu.cycle(4);let e=this.memory.readByte(this.HL.value);this.cpu.cycle(4);const a=e>>7,h=e&1;e=e>>1&255,e|=a<<7,this.F.carry=h===1,this.F.subtract=!1,this.F.halfCarry=!1,this.F.zero=e===0,this.memory.writeByte(this.HL.value,e),this.cpu.cycle(4),this.cpu.cycle(4)}setBitAtRegisterAddress(e){this.cpu.cycle(4);let a=this.memory.readByte(this.HL.value);this.cpu.cycle(4),a|=1<<e,this.memory.writeByte(this.HL.value,a),this.cpu.cycle(4),this.cpu.cycle(4)}outputState(){console.log("register state:"),console.log({AF:this.AF.hexValue,BC:this.BC.hexValue,DE:this.DE.hexValue,HL:this.HL.hexValue,PC:this.PC.hexValue,SP:this.SP.hexValue})}}s.CPURegisters=d}),define("cpu/Instruction",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0})}),define("cpu/setCbMap",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.setCbMap=void 0;function o(){this.cbMap.set(0,{name:"RLC B",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeft(this.registers.B)}}),this.cbMap.set(1,{name:"RLC C",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeft(this.registers.C)}}),this.cbMap.set(2,{name:"RLC D",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeft(this.registers.D)}}),this.cbMap.set(3,{name:"RLC E",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeft(this.registers.E)}}),this.cbMap.set(4,{name:"RLC H",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeft(this.registers.H)}}),this.cbMap.set(5,{name:"RLC L",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeft(this.registers.L)}}),this.cbMap.set(6,{name:"RLC (HL)",cycleTime:0,operation:()=>{this.registers.rotateValueAtRegisterAddrLeft()}}),this.cbMap.set(7,{name:"RLC A",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeft(this.registers.A)}}),this.cbMap.set(8,{name:"RRC B",cycleTime:0,operation:()=>{this.registers.rotateRegisterRight(this.registers.B)}}),this.cbMap.set(9,{name:"RRC C",cycleTime:0,operation:()=>{this.registers.rotateRegisterRight(this.registers.C)}}),this.cbMap.set(10,{name:"RRC D",cycleTime:0,operation:()=>{this.registers.rotateRegisterRight(this.registers.D)}}),this.cbMap.set(11,{name:"RRC E",cycleTime:0,operation:()=>{this.registers.rotateRegisterRight(this.registers.E)}}),this.cbMap.set(12,{name:"RRC H",cycleTime:0,operation:()=>{this.registers.rotateRegisterRight(this.registers.H)}}),this.cbMap.set(13,{name:"RRC L",cycleTime:0,operation:()=>{this.registers.rotateRegisterRight(this.registers.L)}}),this.cbMap.set(14,{name:"RRC (HL)",cycleTime:0,operation:()=>{this.registers.rotateValueAtRegisterAddrRight()}}),this.cbMap.set(15,{name:"RRC A",cycleTime:0,operation:()=>{this.registers.rotateRegisterRight(this.registers.A)}}),this.cbMap.set(16,{name:"RL B",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeftCarry(this.registers.B)}}),this.cbMap.set(17,{name:"RL C",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeftCarry(this.registers.C)}}),this.cbMap.set(18,{name:"RL D",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeftCarry(this.registers.D)}}),this.cbMap.set(19,{name:"RL E",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeftCarry(this.registers.E)}}),this.cbMap.set(20,{name:"RL H",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeftCarry(this.registers.H)}}),this.cbMap.set(21,{name:"RL L",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeftCarry(this.registers.L)}}),this.cbMap.set(22,{name:"RL (HL)",cycleTime:0,operation:()=>{this.registers.rotateAtRegisterAddrLeftCarry()}}),this.cbMap.set(23,{name:"RL A",cycleTime:0,operation:()=>{this.registers.rotateRegisterLeftCarry(this.registers.A)}}),this.cbMap.set(24,{name:"RR B",cycleTime:0,operation:()=>{this.registers.rotateRegisterRightCarry(this.registers.B)}}),this.cbMap.set(25,{name:"RR C",cycleTime:0,operation:()=>{this.registers.rotateRegisterRightCarry(this.registers.C)}}),this.cbMap.set(26,{name:"RR D",cycleTime:0,operation:()=>{this.registers.rotateRegisterRightCarry(this.registers.D)}}),this.cbMap.set(27,{name:"RR E",cycleTime:0,operation:()=>{this.registers.rotateRegisterRightCarry(this.registers.E)}}),this.cbMap.set(28,{name:"RR H",cycleTime:0,operation:()=>{this.registers.rotateRegisterRightCarry(this.registers.H)}}),this.cbMap.set(29,{name:"RR L",cycleTime:0,operation:()=>{this.registers.rotateRegisterRightCarry(this.registers.L)}}),this.cbMap.set(30,{name:"RR (HL)",cycleTime:0,operation:()=>{this.registers.rotateAtRegisterAddrRightCarry()}}),this.cbMap.set(31,{name:"RR A",cycleTime:0,operation:()=>{this.registers.rotateRegisterRightCarry(this.registers.A)}}),this.cbMap.set(32,{name:"SLA B",cycleTime:0,operation:()=>{this.registers.shiftLeft(this.registers.B)}}),this.cbMap.set(33,{name:"SLA C",cycleTime:0,operation:()=>{this.registers.shiftLeft(this.registers.C)}}),this.cbMap.set(34,{name:"SLA D",cycleTime:0,operation:()=>{this.registers.shiftLeft(this.registers.D)}}),this.cbMap.set(35,{name:"SLA E",cycleTime:0,operation:()=>{this.registers.shiftLeft(this.registers.E)}}),this.cbMap.set(36,{name:"SLA H",cycleTime:0,operation:()=>{this.registers.shiftLeft(this.registers.H)}}),this.cbMap.set(37,{name:"SLA L",cycleTime:0,operation:()=>{this.registers.shiftLeft(this.registers.L)}}),this.cbMap.set(38,{name:"SLA (HL)",cycleTime:0,operation:()=>{this.registers.shiftLeftAtRegisterAddr()}}),this.cbMap.set(39,{name:"SLA A",cycleTime:0,operation:()=>{this.registers.shiftLeft(this.registers.A)}}),this.cbMap.set(40,{name:"SRA B",cycleTime:0,operation:()=>{this.registers.shiftRight(this.registers.B)}}),this.cbMap.set(41,{name:"SRA C",cycleTime:0,operation:()=>{this.registers.shiftRight(this.registers.C)}}),this.cbMap.set(42,{name:"SRA D",cycleTime:0,operation:()=>{this.registers.shiftRight(this.registers.D)}}),this.cbMap.set(43,{name:"SRA E",cycleTime:0,operation:()=>{this.registers.shiftRight(this.registers.E)}}),this.cbMap.set(44,{name:"SRA H",cycleTime:0,operation:()=>{this.registers.shiftRight(this.registers.H)}}),this.cbMap.set(45,{name:"SRA L",cycleTime:0,operation:()=>{this.registers.shiftRight(this.registers.L)}}),this.cbMap.set(46,{name:"SRA (HL)",cycleTime:0,operation:()=>{this.registers.shiftRightAtRegisterAddr()}}),this.cbMap.set(47,{name:"SRA A",cycleTime:0,operation:()=>{this.registers.shiftRight(this.registers.A)}}),this.cbMap.set(48,{name:"SWAP B",cycleTime:0,operation:()=>{this.registers.swap(this.registers.B)}}),this.cbMap.set(49,{name:"SWAP C",cycleTime:0,operation:()=>{this.registers.swap(this.registers.C)}}),this.cbMap.set(50,{name:"SWAP D",cycleTime:0,operation:()=>{this.registers.swap(this.registers.D)}}),this.cbMap.set(51,{name:"SWAP E",cycleTime:0,operation:()=>{this.registers.swap(this.registers.E)}}),this.cbMap.set(52,{name:"SWAP H",cycleTime:0,operation:()=>{this.registers.swap(this.registers.H)}}),this.cbMap.set(53,{name:"SWAP L",cycleTime:0,operation:()=>{this.registers.swap(this.registers.L)}}),this.cbMap.set(54,{name:"SWAP (HL)",cycleTime:0,operation:()=>{this.registers.swapAtRegisterAddr()}}),this.cbMap.set(55,{name:"SWAP A",cycleTime:0,operation:()=>{this.registers.swap(this.registers.A)}}),this.cbMap.set(56,{name:"SRL B",cycleTime:0,operation:()=>{this.registers.shiftRightCarry(this.registers.B)}}),this.cbMap.set(57,{name:"SRL C",cycleTime:0,operation:()=>{this.registers.shiftRightCarry(this.registers.C)}}),this.cbMap.set(58,{name:"SRL D",cycleTime:0,operation:()=>{this.registers.shiftRightCarry(this.registers.D)}}),this.cbMap.set(59,{name:"SRL E",cycleTime:0,operation:()=>{this.registers.shiftRightCarry(this.registers.E)}}),this.cbMap.set(60,{name:"SRL H",cycleTime:0,operation:()=>{this.registers.shiftRightCarry(this.registers.H)}}),this.cbMap.set(61,{name:"SRL L",cycleTime:0,operation:()=>{this.registers.shiftRightCarry(this.registers.L)}}),this.cbMap.set(62,{name:"SRL (HL)",cycleTime:0,operation:()=>{this.registers.shiftRightCarryAtRegisterAddr()}}),this.cbMap.set(63,{name:"SRL A",cycleTime:0,operation:()=>{this.registers.shiftRightCarry(this.registers.A)}}),this.cbMap.set(64,{name:"BIT 0, B",cycleTime:0,operation:()=>{this.registers.testBit(0,this.registers.B)}}),this.cbMap.set(65,{name:"BIT 0, C",cycleTime:0,operation:()=>{this.registers.testBit(0,this.registers.C)}}),this.cbMap.set(66,{name:"BIT 0, D",cycleTime:0,operation:()=>{this.registers.testBit(0,this.registers.D)}}),this.cbMap.set(67,{name:"BIT 0, E",cycleTime:0,operation:()=>{this.registers.testBit(0,this.registers.E)}}),this.cbMap.set(68,{name:"BIT 0, H",cycleTime:0,operation:()=>{this.registers.testBit(0,this.registers.H)}}),this.cbMap.set(69,{name:"BIT 0, L",cycleTime:0,operation:()=>{this.registers.testBit(0,this.registers.L)}}),this.cbMap.set(70,{name:"BIT 0, (HL)",cycleTime:0,operation:()=>{this.registers.testBitAtRegisterAddr(0)}}),this.cbMap.set(71,{name:"BIT 0, A",cycleTime:0,operation:()=>{this.registers.testBit(0,this.registers.A)}}),this.cbMap.set(72,{name:"BIT 1, B",cycleTime:0,operation:()=>{this.registers.testBit(1,this.registers.B)}}),this.cbMap.set(73,{name:"BIT 1, C",cycleTime:0,operation:()=>{this.registers.testBit(1,this.registers.C)}}),this.cbMap.set(74,{name:"BIT 1, D",cycleTime:0,operation:()=>{this.registers.testBit(1,this.registers.D)}}),this.cbMap.set(75,{name:"BIT 1, E",cycleTime:0,operation:()=>{this.registers.testBit(1,this.registers.E)}}),this.cbMap.set(76,{name:"BIT 1, H",cycleTime:0,operation:()=>{this.registers.testBit(1,this.registers.H)}}),this.cbMap.set(77,{name:"BIT 1, L",cycleTime:0,operation:()=>{this.registers.testBit(1,this.registers.L)}}),this.cbMap.set(78,{name:"BIT 1, (HL)",cycleTime:0,operation:()=>{this.registers.testBitAtRegisterAddr(1)}}),this.cbMap.set(79,{name:"BIT 1, A",cycleTime:0,operation:()=>{this.registers.testBit(1,this.registers.A)}}),this.cbMap.set(80,{name:"BIT 2, B",cycleTime:0,operation:()=>{this.registers.testBit(2,this.registers.B)}}),this.cbMap.set(81,{name:"BIT 2, C",cycleTime:0,operation:()=>{this.registers.testBit(2,this.registers.C)}}),this.cbMap.set(82,{name:"BIT 2, D",cycleTime:0,operation:()=>{this.registers.testBit(2,this.registers.D)}}),this.cbMap.set(83,{name:"BIT 2, E",cycleTime:0,operation:()=>{this.registers.testBit(2,this.registers.E)}}),this.cbMap.set(84,{name:"BIT 2, H",cycleTime:0,operation:()=>{this.registers.testBit(2,this.registers.H)}}),this.cbMap.set(85,{name:"BIT 2, L",cycleTime:0,operation:()=>{this.registers.testBit(2,this.registers.L)}}),this.cbMap.set(86,{name:"BIT 2, (HL)",cycleTime:0,operation:()=>{this.registers.testBitAtRegisterAddr(2)}}),this.cbMap.set(87,{name:"BIT 2, A",cycleTime:0,operation:()=>{this.registers.testBit(2,this.registers.A)}}),this.cbMap.set(88,{name:"BIT 3, B",cycleTime:0,operation:()=>{this.registers.testBit(3,this.registers.B)}}),this.cbMap.set(89,{name:"BIT 3, C",cycleTime:0,operation:()=>{this.registers.testBit(3,this.registers.C)}}),this.cbMap.set(90,{name:"BIT 3, D",cycleTime:0,operation:()=>{this.registers.testBit(3,this.registers.D)}}),this.cbMap.set(91,{name:"BIT 3, E",cycleTime:0,operation:()=>{this.registers.testBit(3,this.registers.E)}}),this.cbMap.set(92,{name:"BIT 3, H",cycleTime:0,operation:()=>{this.registers.testBit(3,this.registers.H)}}),this.cbMap.set(93,{name:"BIT 3, L",cycleTime:0,operation:()=>{this.registers.testBit(3,this.registers.L)}}),this.cbMap.set(94,{name:"BIT 3, (HL)",cycleTime:0,operation:()=>{this.registers.testBitAtRegisterAddr(3)}}),this.cbMap.set(95,{name:"BIT 3, A",cycleTime:0,operation:()=>{this.registers.testBit(3,this.registers.A)}}),this.cbMap.set(96,{name:"BIT 4, B",cycleTime:0,operation:()=>{this.registers.testBit(4,this.registers.B)}}),this.cbMap.set(97,{name:"BIT 4, C",cycleTime:0,operation:()=>{this.registers.testBit(4,this.registers.C)}}),this.cbMap.set(98,{name:"BIT 4, D",cycleTime:0,operation:()=>{this.registers.testBit(4,this.registers.D)}}),this.cbMap.set(99,{name:"BIT 4, E",cycleTime:0,operation:()=>{this.registers.testBit(4,this.registers.E)}}),this.cbMap.set(100,{name:"BIT 4, H",cycleTime:0,operation:()=>{this.registers.testBit(4,this.registers.H)}}),this.cbMap.set(101,{name:"BIT 4, L",cycleTime:0,operation:()=>{this.registers.testBit(4,this.registers.L)}}),this.cbMap.set(102,{name:"BIT 4, (HL)",cycleTime:0,operation:()=>{this.registers.testBitAtRegisterAddr(4)}}),this.cbMap.set(103,{name:"BIT 4, A",cycleTime:0,operation:()=>{this.registers.testBit(4,this.registers.A)}}),this.cbMap.set(104,{name:"BIT 5, B",cycleTime:0,operation:()=>{this.registers.testBit(5,this.registers.B)}}),this.cbMap.set(105,{name:"BIT 5, C",cycleTime:0,operation:()=>{this.registers.testBit(5,this.registers.C)}}),this.cbMap.set(106,{name:"BIT 5, D",cycleTime:0,operation:()=>{this.registers.testBit(5,this.registers.D)}}),this.cbMap.set(107,{name:"BIT 5, E",cycleTime:0,operation:()=>{this.registers.testBit(5,this.registers.E)}}),this.cbMap.set(108,{name:"BIT 5, H",cycleTime:0,operation:()=>{this.registers.testBit(5,this.registers.H)}}),this.cbMap.set(109,{name:"BIT 5, L",cycleTime:0,operation:()=>{this.registers.testBit(5,this.registers.L)}}),this.cbMap.set(110,{name:"BIT 5, (HL)",cycleTime:0,operation:()=>{this.registers.testBitAtRegisterAddr(5)}}),this.cbMap.set(111,{name:"BIT 5, A",cycleTime:0,operation:()=>{this.registers.testBit(5,this.registers.A)}}),this.cbMap.set(112,{name:"BIT 6, B",cycleTime:0,operation:()=>{this.registers.testBit(6,this.registers.B)}}),this.cbMap.set(113,{name:"BIT 6, C",cycleTime:0,operation:()=>{this.registers.testBit(6,this.registers.C)}}),this.cbMap.set(114,{name:"BIT 6, D",cycleTime:0,operation:()=>{this.registers.testBit(6,this.registers.D)}}),this.cbMap.set(115,{name:"BIT 6, E",cycleTime:0,operation:()=>{this.registers.testBit(6,this.registers.E)}}),this.cbMap.set(116,{name:"BIT 6, H",cycleTime:0,operation:()=>{this.registers.testBit(6,this.registers.H)}}),this.cbMap.set(117,{name:"BIT 6, L",cycleTime:0,operation:()=>{this.registers.testBit(6,this.registers.L)}}),this.cbMap.set(118,{name:"BIT 6, (HL)",cycleTime:0,operation:()=>{this.registers.testBitAtRegisterAddr(6)}}),this.cbMap.set(119,{name:"BIT 6, A",cycleTime:0,operation:()=>{this.registers.testBit(6,this.registers.A)}}),this.cbMap.set(120,{name:"BIT 7, B",cycleTime:0,operation:()=>{this.registers.testBit(7,this.registers.B)}}),this.cbMap.set(121,{name:"BIT 7, C",cycleTime:0,operation:()=>{this.registers.testBit(7,this.registers.C)}}),this.cbMap.set(122,{name:"BIT 7, D",cycleTime:0,operation:()=>{this.registers.testBit(7,this.registers.D)}}),this.cbMap.set(123,{name:"BIT 7, E",cycleTime:0,operation:()=>{this.registers.testBit(7,this.registers.E)}}),this.cbMap.set(124,{name:"BIT 7, H",cycleTime:0,operation:()=>{this.registers.testBit(7,this.registers.H)}}),this.cbMap.set(125,{name:"BIT 7, L",cycleTime:0,operation:()=>{this.registers.testBit(7,this.registers.L)}}),this.cbMap.set(126,{name:"BIT 7, (HL)",cycleTime:0,operation:()=>{this.registers.testBitAtRegisterAddr(7)}}),this.cbMap.set(127,{name:"BIT 7, A",cycleTime:0,operation:()=>{this.registers.testBit(7,this.registers.A)}}),this.cbMap.set(128,{name:"RES 0, B",cycleTime:0,operation:()=>{this.registers.resetBit(0,this.registers.B)}}),this.cbMap.set(129,{name:"RES 0, C",cycleTime:0,operation:()=>{this.registers.resetBit(0,this.registers.C)}}),this.cbMap.set(130,{name:"RES 0, D",cycleTime:0,operation:()=>{this.registers.resetBit(0,this.registers.D)}}),this.cbMap.set(131,{name:"RES 0, E",cycleTime:0,operation:()=>{this.registers.resetBit(0,this.registers.E)}}),this.cbMap.set(132,{name:"RES 0, H",cycleTime:0,operation:()=>{this.registers.resetBit(0,this.registers.H)}}),this.cbMap.set(133,{name:"RES 0, L",cycleTime:0,operation:()=>{this.registers.resetBit(0,this.registers.L)}}),this.cbMap.set(134,{name:"RES 0, (HL)",cycleTime:0,operation:()=>{this.registers.resetBitAtRegisterAddr(0)}}),this.cbMap.set(135,{name:"RES 0, A",cycleTime:0,operation:()=>{this.registers.resetBit(0,this.registers.A)}}),this.cbMap.set(136,{name:"RES 1, B",cycleTime:0,operation:()=>{this.registers.resetBit(1,this.registers.B)}}),this.cbMap.set(137,{name:"RES 1, C",cycleTime:0,operation:()=>{this.registers.resetBit(1,this.registers.C)}}),this.cbMap.set(138,{name:"RES 1, D",cycleTime:0,operation:()=>{this.registers.resetBit(1,this.registers.D)}}),this.cbMap.set(139,{name:"RES 1, E",cycleTime:0,operation:()=>{this.registers.resetBit(1,this.registers.E)}}),this.cbMap.set(140,{name:"RES 1, H",cycleTime:0,operation:()=>{this.registers.resetBit(1,this.registers.H)}}),this.cbMap.set(141,{name:"RES 1, L",cycleTime:0,operation:()=>{this.registers.resetBit(1,this.registers.L)}}),this.cbMap.set(142,{name:"RES 1, (HL)",cycleTime:0,operation:()=>{this.registers.resetBitAtRegisterAddr(1)}}),this.cbMap.set(143,{name:"RES 1, A",cycleTime:0,operation:()=>{this.registers.resetBit(1,this.registers.A)}}),this.cbMap.set(144,{name:"RES 2, B",cycleTime:0,operation:()=>{this.registers.resetBit(2,this.registers.B)}}),this.cbMap.set(145,{name:"RES 2, C",cycleTime:0,operation:()=>{this.registers.resetBit(2,this.registers.C)}}),this.cbMap.set(146,{name:"RES 2, D",cycleTime:0,operation:()=>{this.registers.resetBit(2,this.registers.D)}}),this.cbMap.set(147,{name:"RES 2, E",cycleTime:0,operation:()=>{this.registers.resetBit(2,this.registers.E)}}),this.cbMap.set(148,{name:"RES 2, H",cycleTime:0,operation:()=>{this.registers.resetBit(2,this.registers.H)}}),this.cbMap.set(149,{name:"RES 2, L",cycleTime:0,operation:()=>{this.registers.resetBit(2,this.registers.L)}}),this.cbMap.set(150,{name:"RES 2, (HL)",cycleTime:0,operation:()=>{this.registers.resetBitAtRegisterAddr(2)}}),this.cbMap.set(151,{name:"RES 2, A",cycleTime:0,operation:()=>{this.registers.resetBit(2,this.registers.A)}}),this.cbMap.set(152,{name:"RES 3, B",cycleTime:0,operation:()=>{this.registers.resetBit(3,this.registers.B)}}),this.cbMap.set(153,{name:"RES 3, C",cycleTime:0,operation:()=>{this.registers.resetBit(3,this.registers.C)}}),this.cbMap.set(154,{name:"RES 3, D",cycleTime:0,operation:()=>{this.registers.resetBit(3,this.registers.D)}}),this.cbMap.set(155,{name:"RES 3, E",cycleTime:0,operation:()=>{this.registers.resetBit(3,this.registers.E)}}),this.cbMap.set(156,{name:"RES 3, H",cycleTime:0,operation:()=>{this.registers.resetBit(3,this.registers.H)}}),this.cbMap.set(157,{name:"RES 3, L",cycleTime:0,operation:()=>{this.registers.resetBit(3,this.registers.L)}}),this.cbMap.set(158,{name:"RES 3, (HL)",cycleTime:0,operation:()=>{this.registers.resetBitAtRegisterAddr(3)}}),this.cbMap.set(159,{name:"RES 3, A",cycleTime:0,operation:()=>{this.registers.resetBit(3,this.registers.A)}}),this.cbMap.set(160,{name:"RES 4, B",cycleTime:0,operation:()=>{this.registers.resetBit(4,this.registers.B)}}),this.cbMap.set(161,{name:"RES 4, C",cycleTime:0,operation:()=>{this.registers.resetBit(4,this.registers.C)}}),this.cbMap.set(162,{name:"RES 4, D",cycleTime:0,operation:()=>{this.registers.resetBit(4,this.registers.D)}}),this.cbMap.set(163,{name:"RES 4, E",cycleTime:0,operation:()=>{this.registers.resetBit(4,this.registers.E)}}),this.cbMap.set(164,{name:"RES 4, H",cycleTime:0,operation:()=>{this.registers.resetBit(4,this.registers.H)}}),this.cbMap.set(165,{name:"RES 4, L",cycleTime:0,operation:()=>{this.registers.resetBit(4,this.registers.L)}}),this.cbMap.set(166,{name:"RES 4, (HL)",cycleTime:0,operation:()=>{this.registers.resetBitAtRegisterAddr(4)}}),this.cbMap.set(167,{name:"RES 4, A",cycleTime:0,operation:()=>{this.registers.resetBit(4,this.registers.A)}}),this.cbMap.set(168,{name:"RES 5, B",cycleTime:0,operation:()=>{this.registers.resetBit(5,this.registers.B)}}),this.cbMap.set(169,{name:"RES 5, C",cycleTime:0,operation:()=>{this.registers.resetBit(5,this.registers.C)}}),this.cbMap.set(170,{name:"RES 5, D",cycleTime:0,operation:()=>{this.registers.resetBit(5,this.registers.D)}}),this.cbMap.set(171,{name:"RES 5, E",cycleTime:0,operation:()=>{this.registers.resetBit(5,this.registers.E)}}),this.cbMap.set(172,{name:"RES 5, H",cycleTime:0,operation:()=>{this.registers.resetBit(5,this.registers.H)}}),this.cbMap.set(173,{name:"RES 5, L",cycleTime:0,operation:()=>{this.registers.resetBit(5,this.registers.L)}}),this.cbMap.set(174,{name:"RES 5, (HL)",cycleTime:0,operation:()=>{this.registers.resetBitAtRegisterAddr(5)}}),this.cbMap.set(175,{name:"RES 5, A",cycleTime:0,operation:()=>{this.registers.resetBit(5,this.registers.A)}}),this.cbMap.set(176,{name:"RES 6, B",cycleTime:0,operation:()=>{this.registers.resetBit(6,this.registers.B)}}),this.cbMap.set(177,{name:"RES 6, C",cycleTime:0,operation:()=>{this.registers.resetBit(6,this.registers.C)}}),this.cbMap.set(178,{name:"RES 6, D",cycleTime:0,operation:()=>{this.registers.resetBit(6,this.registers.D)}}),this.cbMap.set(179,{name:"RES 6, E",cycleTime:0,operation:()=>{this.registers.resetBit(6,this.registers.E)}}),this.cbMap.set(180,{name:"RES 6, H",cycleTime:0,operation:()=>{this.registers.resetBit(6,this.registers.H)}}),this.cbMap.set(181,{name:"RES 6, L",cycleTime:0,operation:()=>{this.registers.resetBit(6,this.registers.L)}}),this.cbMap.set(182,{name:"RES 6, (HL)",cycleTime:0,operation:()=>{this.registers.resetBitAtRegisterAddr(6)}}),this.cbMap.set(183,{name:"RES 6, A",cycleTime:0,operation:()=>{this.registers.resetBit(6,this.registers.A)}}),this.cbMap.set(184,{name:"RES 7, B",cycleTime:0,operation:()=>{this.registers.resetBit(7,this.registers.B)}}),this.cbMap.set(185,{name:"RES 7, C",cycleTime:0,operation:()=>{this.registers.resetBit(7,this.registers.C)}}),this.cbMap.set(186,{name:"RES 7, D",cycleTime:0,operation:()=>{this.registers.resetBit(7,this.registers.D)}}),this.cbMap.set(187,{name:"RES 7, E",cycleTime:0,operation:()=>{this.registers.resetBit(7,this.registers.E)}}),this.cbMap.set(188,{name:"RES 7 H",cycleTime:0,operation:()=>{this.registers.resetBit(7,this.registers.H)}}),this.cbMap.set(189,{name:"RES 7, L",cycleTime:0,operation:()=>{this.registers.resetBit(7,this.registers.L)}}),this.cbMap.set(190,{name:"RES 7, (HL) ",cycleTime:0,operation:()=>{this.registers.resetBitAtRegisterAddr(7)}}),this.cbMap.set(191,{name:"RES 7, A",cycleTime:0,operation:()=>{this.registers.resetBit(7,this.registers.A)}}),this.cbMap.set(192,{name:"SET 0, B",cycleTime:0,operation:()=>{this.cycle(4),this.registers.B.setBit(0,1),this.cycle(4)}}),this.cbMap.set(193,{name:"SET 0, C",cycleTime:0,operation:()=>{this.cycle(4),this.registers.C.setBit(0,1),this.cycle(4)}}),this.cbMap.set(194,{name:"SET 0, D",cycleTime:0,operation:()=>{this.cycle(4),this.registers.D.setBit(0,1),this.cycle(4)}}),this.cbMap.set(195,{name:"SET 0, E",cycleTime:0,operation:()=>{this.cycle(4),this.registers.E.setBit(0,1),this.cycle(4)}}),this.cbMap.set(196,{name:"SET 0, H",cycleTime:0,operation:()=>{this.cycle(4),this.registers.H.setBit(0,1),this.cycle(4)}}),this.cbMap.set(197,{name:"SET 0, L",cycleTime:0,operation:()=>{this.cycle(4),this.registers.L.setBit(0,1),this.cycle(4)}}),this.cbMap.set(198,{name:"SET 0, (HL)",cycleTime:0,operation:()=>{this.registers.setBitAtRegisterAddress(0)}}),this.cbMap.set(199,{name:"SET 0, A",cycleTime:0,operation:()=>{this.cycle(4),this.registers.A.setBit(0,1),this.cycle(4)}}),this.cbMap.set(200,{name:"SET 1, B",cycleTime:0,operation:()=>{this.cycle(4),this.registers.B.setBit(1,1),this.cycle(4)}}),this.cbMap.set(201,{name:"SET 1, C",cycleTime:0,operation:()=>{this.cycle(4),this.registers.C.setBit(1,1),this.cycle(4)}}),this.cbMap.set(202,{name:"SET 1, D",cycleTime:0,operation:()=>{this.cycle(4),this.registers.D.setBit(1,1),this.cycle(4)}}),this.cbMap.set(203,{name:"SET 1, E",cycleTime:0,operation:()=>{this.cycle(4),this.registers.E.setBit(1,1),this.cycle(4)}}),this.cbMap.set(204,{name:"SET 1, H",cycleTime:0,operation:()=>{this.cycle(4),this.registers.H.setBit(1,1),this.cycle(4)}}),this.cbMap.set(205,{name:"SET 1, L",cycleTime:0,operation:()=>{this.cycle(4),this.registers.L.setBit(1,1),this.cycle(4)}}),this.cbMap.set(206,{name:"SET 1, (HL)",cycleTime:0,operation:()=>{this.registers.setBitAtRegisterAddress(1)}}),this.cbMap.set(207,{name:"SET 1, A",cycleTime:0,operation:()=>{this.cycle(4),this.registers.A.setBit(1,1),this.cycle(4)}}),this.cbMap.set(208,{name:"SET 2, B",cycleTime:0,operation:()=>{this.cycle(4),this.registers.B.setBit(2,1),this.cycle(4)}}),this.cbMap.set(209,{name:"SET 2, C",cycleTime:0,operation:()=>{this.cycle(4),this.registers.C.setBit(2,1),this.cycle(4)}}),this.cbMap.set(210,{name:"SET 2, D",cycleTime:0,operation:()=>{this.cycle(4),this.registers.D.setBit(2,1),this.cycle(4)}}),this.cbMap.set(211,{name:"SET 2, E",cycleTime:0,operation:()=>{this.cycle(4),this.registers.E.setBit(2,1),this.cycle(4)}}),this.cbMap.set(212,{name:"SET 2, H",cycleTime:0,operation:()=>{this.cycle(4),this.registers.H.setBit(2,1),this.cycle(4)}}),this.cbMap.set(213,{name:"SET 2, L",cycleTime:0,operation:()=>{this.cycle(4),this.registers.L.setBit(2,1),this.cycle(4)}}),this.cbMap.set(214,{name:"SET 2, (HL)",cycleTime:0,operation:()=>{this.registers.setBitAtRegisterAddress(2)}}),this.cbMap.set(215,{name:"SET 2, A",cycleTime:0,operation:()=>{this.cycle(4),this.registers.A.setBit(2,1),this.cycle(4)}}),this.cbMap.set(216,{name:"SET 3, B",cycleTime:0,operation:()=>{this.cycle(4),this.registers.B.setBit(3,1),this.cycle(4)}}),this.cbMap.set(217,{name:"SET 3, C",cycleTime:0,operation:()=>{this.cycle(4),this.registers.C.setBit(3,1),this.cycle(4)}}),this.cbMap.set(218,{name:"SET 3, D",cycleTime:0,operation:()=>{this.cycle(4),this.registers.D.setBit(3,1),this.cycle(4)}}),this.cbMap.set(219,{name:"SET 3, E",cycleTime:0,operation:()=>{this.cycle(4),this.registers.E.setBit(3,1),this.cycle(4)}}),this.cbMap.set(220,{name:"SET 3, H",cycleTime:0,operation:()=>{this.cycle(4),this.registers.H.setBit(3,1),this.cycle(4)}}),this.cbMap.set(221,{name:"SET 3, L",cycleTime:0,operation:()=>{this.cycle(4),this.registers.L.setBit(3,1),this.cycle(4)}}),this.cbMap.set(222,{name:"SET 3, (HL)",cycleTime:0,operation:()=>{this.registers.setBitAtRegisterAddress(3)}}),this.cbMap.set(223,{name:"SET 3, A",cycleTime:0,operation:()=>{this.cycle(4),this.registers.A.setBit(3,1),this.cycle(4)}}),this.cbMap.set(224,{name:"SET 4, B",cycleTime:0,operation:()=>{this.cycle(4),this.registers.B.setBit(4,1),this.cycle(4)}}),this.cbMap.set(225,{name:"SET 4, C",cycleTime:0,operation:()=>{this.cycle(4),this.registers.C.setBit(4,1),this.cycle(4)}}),this.cbMap.set(226,{name:"SET 4, D",cycleTime:0,operation:()=>{this.cycle(4),this.registers.D.setBit(4,1),this.cycle(4)}}),this.cbMap.set(227,{name:"SET 4, E",cycleTime:0,operation:()=>{this.cycle(4),this.registers.E.setBit(4,1),this.cycle(4)}}),this.cbMap.set(228,{name:"SET 4, H",cycleTime:0,operation:()=>{this.cycle(4),this.registers.H.setBit(4,1),this.cycle(4)}}),this.cbMap.set(229,{name:"SET 4, L",cycleTime:0,operation:()=>{this.cycle(4),this.registers.L.setBit(4,1),this.cycle(4)}}),this.cbMap.set(230,{name:"SET 4, (HL)",cycleTime:0,operation:()=>{this.registers.setBitAtRegisterAddress(4)}}),this.cbMap.set(231,{name:"SET 4, A",cycleTime:0,operation:()=>{this.cycle(4),this.registers.A.setBit(4,1),this.cycle(4)}}),this.cbMap.set(232,{name:"SET 5, B",cycleTime:0,operation:()=>{this.cycle(4),this.registers.B.setBit(5,1),this.cycle(4)}}),this.cbMap.set(233,{name:"SET 5, C",cycleTime:0,operation:()=>{this.cycle(4),this.registers.C.setBit(5,1),this.cycle(4)}}),this.cbMap.set(234,{name:"SET 5, D",cycleTime:0,operation:()=>{this.cycle(4),this.registers.D.setBit(5,1),this.cycle(4)}}),this.cbMap.set(235,{name:"SET 5, E",cycleTime:0,operation:()=>{this.cycle(4),this.registers.E.setBit(5,1),this.cycle(4)}}),this.cbMap.set(236,{name:"SET 5, H",cycleTime:0,operation:()=>{this.cycle(4),this.registers.H.setBit(5,1),this.cycle(4)}}),this.cbMap.set(237,{name:"SET 5, L",cycleTime:0,operation:()=>{this.cycle(4),this.registers.L.setBit(5,1),this.cycle(4)}}),this.cbMap.set(238,{name:"SET 5, (HL)",cycleTime:0,operation:()=>{this.registers.setBitAtRegisterAddress(5)}}),this.cbMap.set(239,{name:"SET 5, A",cycleTime:0,operation:()=>{this.cycle(4),this.registers.A.setBit(5,1),this.cycle(4)}}),this.cbMap.set(240,{name:"SET 6, B",cycleTime:0,operation:()=>{this.cycle(4),this.registers.B.setBit(6,1),this.cycle(4)}}),this.cbMap.set(241,{name:"SET 6, C",cycleTime:0,operation:()=>{this.cycle(4),this.registers.C.setBit(6,1),this.cycle(4)}}),this.cbMap.set(242,{name:"SET 6, D",cycleTime:0,operation:()=>{this.cycle(4),this.registers.D.setBit(6,1),this.cycle(4)}}),this.cbMap.set(243,{name:"SET 6, E",cycleTime:0,operation:()=>{this.cycle(4),this.registers.E.setBit(6,1),this.cycle(4)}}),this.cbMap.set(244,{name:"set 6, H",cycleTime:0,operation:()=>{this.cycle(4),this.registers.H.setBit(6,1),this.cycle(4)}}),this.cbMap.set(245,{name:"SET 6, L",cycleTime:0,operation:()=>{this.cycle(4),this.registers.L.setBit(6,1),this.cycle(4)}}),this.cbMap.set(246,{name:"SET 6, (HL)",cycleTime:0,operation:()=>{this.registers.setBitAtRegisterAddress(6)}}),this.cbMap.set(247,{name:"SET 6, A",cycleTime:0,operation:()=>{this.cycle(4),this.registers.A.setBit(6,1),this.cycle(4)}}),this.cbMap.set(248,{name:"SET 7, B",cycleTime:0,operation:()=>{this.cycle(4),this.registers.B.setBit(7,1),this.cycle(4)}}),this.cbMap.set(249,{name:"SET 7, C",cycleTime:0,operation:()=>{this.cycle(4),this.registers.C.setBit(7,1),this.cycle(4)}}),this.cbMap.set(250,{name:"SET 7, D",cycleTime:0,operation:()=>{this.cycle(4),this.registers.D.setBit(7,1),this.cycle(4)}}),this.cbMap.set(251,{name:"SET 7, E",cycleTime:0,operation:()=>{this.cycle(4),this.registers.E.setBit(7,1),this.cycle(4)}}),this.cbMap.set(252,{name:"SET 7, H",cycleTime:0,operation:()=>{this.cycle(4),this.registers.H.setBit(7,1),this.cycle(4)}}),this.cbMap.set(253,{name:"SET 7, L",cycleTime:0,operation:()=>{this.cycle(4),this.registers.L.setBit(7,1),this.cycle(4)}}),this.cbMap.set(254,{name:"SET 7, (HL)",cycleTime:0,operation:()=>{this.registers.setBitAtRegisterAddress(7)}}),this.cbMap.set(255,{name:"SET 7, A",cycleTime:0,operation:()=>{this.cycle(4),this.registers.A.setBit(7,1),this.cycle(4)}})}s.setCbMap=o}),define("cpu/setInstructionMap",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.setInstructionMap=void 0;function o(){const{registers:t,memory:r}=this;this.instructionMap.set(0,{name:"NOP",cycleTime:4,operation(){}}),this.instructionMap.set(1,{get name(){return`LD BC, 0x${r.readWord(t.PC.value).toString(16)}`},cycleTime:12,operation:()=>{this.registers.loadWord(this.registers.BC)}}),this.instructionMap.set(2,{name:"LD (BC), A",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddr(this.registers.BC,this.registers.A)}}),this.instructionMap.set(3,{name:"INC BC",cycleTime:8,operation:()=>{this.registers.BC.value++}}),this.instructionMap.set(4,{name:"INC B",cycleTime:4,operation:()=>{this.registers.increment(this.registers.B)}}),this.instructionMap.set(5,{name:"DEC B",cycleTime:4,operation:()=>{this.registers.decrement(this.registers.B)}}),this.instructionMap.set(6,{get name(){return`LD B, 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.readByte(this.registers.B)}}),this.instructionMap.set(7,{name:"RLCA",cycleTime:4,operation:()=>{this.registers.rotateLeft()}}),this.instructionMap.set(8,{get name(){return`LD (0x${r.readWord(t.PC.value).toString(16)}), SP`},cycleTime:20,operation:()=>{this.registers.writeStackPointerToMemory()}}),this.instructionMap.set(9,{name:"ADD HL, BC",cycleTime:8,operation:()=>{this.registers.add16Bit(this.registers.HL,this.registers.BC)}}),this.instructionMap.set(10,{name:"LD A, (BC)",cycleTime:8,operation:()=>{this.registers.loadByte(this.registers.A,this.registers.BC)}}),this.instructionMap.set(11,{name:"DEC BC",cycleTime:8,operation:()=>{this.registers.BC.value--}}),this.instructionMap.set(12,{name:"INC C",cycleTime:4,operation:()=>{this.registers.increment(this.registers.C)}}),this.instructionMap.set(13,{name:"DEC C",cycleTime:4,operation:()=>{this.registers.decrement(this.registers.C)}}),this.instructionMap.set(14,{get name(){return`LD C, 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.readByte(this.registers.C)}}),this.instructionMap.set(15,{name:"RRCA",cycleTime:4,operation:()=>{this.registers.rotateRight()}}),this.instructionMap.set(16,{name:"STOP 0",cycleTime:4,operation:()=>{this.isStopped=!0}}),this.instructionMap.set(17,{get name(){return`LD DE, 0x${r.readWord(t.PC.value).toString(16)}`},cycleTime:12,operation:()=>{this.registers.loadWord(this.registers.DE)}}),this.instructionMap.set(18,{name:"LD (DE), A",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddr(this.registers.DE,this.registers.A)}}),this.instructionMap.set(19,{name:"INC DE",cycleTime:8,operation:()=>{this.registers.DE.value++}}),this.instructionMap.set(20,{name:"INC D",cycleTime:4,operation:()=>{this.registers.increment(this.registers.D)}}),this.instructionMap.set(21,{name:"DEC D",cycleTime:4,operation:()=>{this.registers.decrement(this.registers.D)}}),this.instructionMap.set(22,{get name(){return`LD D, 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.readByte(this.registers.D)}}),this.instructionMap.set(23,{name:"RLA",cycleTime:4,operation:()=>{this.registers.rotateLeftCarry()}}),this.instructionMap.set(24,{get name(){return`JR 0x${r.readSignedByte(t.PC.value).toString(16)}`},cycleTime:12,operation:()=>{this.registers.relativeJump()}}),this.instructionMap.set(25,{name:"ADD HL, DE",cycleTime:8,operation:()=>{this.registers.add16Bit(this.registers.HL,this.registers.DE)}}),this.instructionMap.set(26,{name:"LD A, (DE)",cycleTime:8,operation:()=>{this.registers.loadByte(this.registers.A,this.registers.DE)}}),this.instructionMap.set(27,{name:"DEC DE",cycleTime:8,operation:()=>{this.registers.DE.value--}}),this.instructionMap.set(28,{name:"INC E",cycleTime:4,operation:()=>{this.registers.increment(this.registers.E)}}),this.instructionMap.set(29,{name:"DEC E",cycleTime:4,operation:()=>{this.registers.decrement(this.registers.E)}}),this.instructionMap.set(30,{get name(){return`LD E, 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.readByte(this.registers.E)}}),this.instructionMap.set(31,{name:"RRA",cycleTime:4,operation:()=>{this.registers.rotateRightCarry()}}),this.instructionMap.set(32,{get name(){return`JR NZ, 0x${r.readSignedByte(t.PC.value).toString(16)}`},get cycleTime(){return t.F.zero?8:12},operation:()=>{this.registers.relativeJumpIfNotZero()}}),this.instructionMap.set(33,{get name(){return`LD HL, 0x${r.readWord(t.PC.value).toString(16)}`},cycleTime:12,operation:()=>{this.registers.loadWord(this.registers.HL)}}),this.instructionMap.set(34,{name:"LD (HL+), A",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddrAndIncrementTarget(this.registers.HL,this.registers.A)}}),this.instructionMap.set(35,{name:"INC HL",cycleTime:8,operation:()=>{this.registers.HL.value++}}),this.instructionMap.set(36,{name:"INC H",cycleTime:4,operation:()=>{this.registers.increment(this.registers.H)}}),this.instructionMap.set(37,{name:"DEC H",cycleTime:4,operation:()=>{this.registers.decrement(this.registers.H)}}),this.instructionMap.set(38,{get name(){return`LD H, ${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.readByte(this.registers.H)}}),this.instructionMap.set(39,{name:"DAA",cycleTime:4,operation:()=>{this.registers.decimalAdjustAccumulator()}}),this.instructionMap.set(40,{get name(){return`JR Z, 0x${r.readSignedByte(t.PC.value).toString(16)}`},get cycleTime(){return t.F.zero?12:8},operation:()=>{this.registers.relativeJumpIfZero()}}),this.instructionMap.set(41,{name:"ADD HL, HL",cycleTime:8,operation:()=>{this.registers.add16Bit(this.registers.HL,this.registers.HL)}}),this.instructionMap.set(42,{name:"LD A, (HL+)",cycleTime:8,operation:()=>{this.registers.loadByteAndIncrementSource(this.registers.A,this.registers.HL)}}),this.instructionMap.set(43,{name:"DEC HL",cycleTime:8,operation:()=>{this.registers.HL.value--}}),this.instructionMap.set(44,{name:"INC L",cycleTime:4,operation:()=>{this.registers.increment(this.registers.L)}}),this.instructionMap.set(45,{name:"DEC L",cycleTime:4,operation:()=>{this.registers.decrement(this.registers.L)}}),this.instructionMap.set(46,{get name(){return`LD L, 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.readByte(this.registers.L)}}),this.instructionMap.set(47,{name:"CPL",cycleTime:4,operation:()=>{this.registers.complementAccumulator()}}),this.instructionMap.set(48,{get name(){return`JR NC, 0x${r.readSignedByte(t.PC.value).toString(16)}`},get cycleTime(){return t.F.carry?8:12},operation:()=>{this.registers.relativeJumpIfNotCarry()}}),this.instructionMap.set(49,{get name(){return`LD SP, 0x${r.readWord(t.PC.value).toString(16)}`},cycleTime:12,operation:()=>{this.registers.loadWord(this.registers.SP)}}),this.instructionMap.set(50,{name:"LD (HL-), A",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddrAndDecrementTarget(this.registers.HL,this.registers.A)}}),this.instructionMap.set(51,{name:"INC SP",cycleTime:8,operation:()=>{this.registers.SP.value++}}),this.instructionMap.set(52,{name:"INC (HL)",cycleTime:0,operation:()=>{this.registers.incrementMemoryValAtRegisterAddr(this.registers.HL)}}),this.instructionMap.set(53,{name:"DEC (HL)",cycleTime:0,operation:()=>{this.registers.decrementMemoryValAtRegisterAddr(this.registers.HL)}}),this.instructionMap.set(54,{get name(){return`LD (HL), 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:0,operation:()=>{this.registers.writeByteIntoRegisterAddress(this.registers.HL)}}),this.instructionMap.set(55,{name:"SCF",cycleTime:4,operation:()=>{this.registers.setCarryFlag()}}),this.instructionMap.set(56,{get name(){return`JR C, 0x${r.readSignedByte(t.PC.value).toString(16)}`},get cycleTime(){return t.F.carry?12:8},operation:()=>{this.registers.relativeJumpIfCarry()}}),this.instructionMap.set(57,{name:"ADD HL, SP",cycleTime:8,operation:()=>{this.registers.add16Bit(this.registers.HL,this.registers.SP)}}),this.instructionMap.set(58,{name:"LD A, (HL-)",cycleTime:8,operation:()=>{this.registers.loadByteAndDecrementSource(this.registers.A,this.registers.HL)}}),this.instructionMap.set(59,{name:"DEC SP",cycleTime:8,operation:()=>{this.registers.SP.value--}}),this.instructionMap.set(60,{name:"INC A",cycleTime:4,operation:()=>{this.registers.increment(this.registers.A)}}),this.instructionMap.set(61,{name:"DEC A",cycleTime:4,operation:()=>{this.registers.decrement(this.registers.A)}}),this.instructionMap.set(62,{get name(){return`LD A, 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.readByte(this.registers.A)}}),this.instructionMap.set(63,{name:"CCF",cycleTime:4,operation:()=>{this.registers.complementCarryFlag()}}),this.instructionMap.set(64,{name:"LD B, B",cycleTime:4,operation:()=>{this.registers.load(this.registers.B,this.registers.B)}}),this.instructionMap.set(65,{name:"LD B, C",cycleTime:4,operation:()=>{this.registers.load(this.registers.B,this.registers.C)}}),this.instructionMap.set(66,{name:"LD B, D",cycleTime:4,operation:()=>{this.registers.load(this.registers.B,this.registers.D)}}),this.instructionMap.set(67,{name:"LD B, E",cycleTime:4,operation:()=>{this.registers.load(this.registers.B,this.registers.E)}}),this.instructionMap.set(68,{name:"LD B, H",cycleTime:4,operation:()=>{this.registers.load(this.registers.B,this.registers.H)}}),this.instructionMap.set(69,{name:"LD B, L",cycleTime:4,operation:()=>{this.registers.load(this.registers.B,this.registers.L)}}),this.instructionMap.set(70,{name:"LD B, (HL)",cycleTime:8,operation:()=>{this.registers.loadByte(this.registers.B,this.registers.HL)}}),this.instructionMap.set(71,{name:"LD B, A",cycleTime:4,operation:()=>{this.registers.load(this.registers.B,this.registers.A)}}),this.instructionMap.set(72,{name:"LD C, B",cycleTime:4,operation:()=>{this.registers.load(this.registers.C,this.registers.B)}}),this.instructionMap.set(73,{name:"LD C, C",cycleTime:4,operation:()=>{this.registers.load(this.registers.C,this.registers.C)}}),this.instructionMap.set(74,{name:"LD C, D",cycleTime:4,operation:()=>{this.registers.load(this.registers.C,this.registers.D)}}),this.instructionMap.set(75,{name:"LD C, E",cycleTime:4,operation:()=>{this.registers.load(this.registers.C,this.registers.E)}}),this.instructionMap.set(76,{name:"LD C, H",cycleTime:4,operation:()=>{this.registers.load(this.registers.C,this.registers.H)}}),this.instructionMap.set(77,{name:"LD C, L",cycleTime:4,operation:()=>{this.registers.load(this.registers.C,this.registers.L)}}),this.instructionMap.set(78,{name:"LD C, (HL)",cycleTime:8,operation:()=>{this.registers.loadByte(this.registers.C,this.registers.HL)}}),this.instructionMap.set(79,{name:"LD C, A",cycleTime:4,operation:()=>{this.registers.load(this.registers.C,this.registers.A)}}),this.instructionMap.set(80,{name:"LD D, B",cycleTime:4,operation:()=>{this.registers.load(this.registers.D,this.registers.B)}}),this.instructionMap.set(81,{name:"LD D, C",cycleTime:4,operation:()=>{this.registers.load(this.registers.D,this.registers.C)}}),this.instructionMap.set(82,{name:"LD D, D",cycleTime:4,operation:()=>{this.registers.load(this.registers.D,this.registers.D)}}),this.instructionMap.set(83,{name:"LD D, E",cycleTime:4,operation:()=>{this.registers.load(this.registers.D,this.registers.E)}}),this.instructionMap.set(84,{name:"LD D, H",cycleTime:4,operation:()=>{this.registers.load(this.registers.D,this.registers.H)}}),this.instructionMap.set(85,{name:"LD D, L",cycleTime:4,operation:()=>{this.registers.load(this.registers.D,this.registers.L)}}),this.instructionMap.set(86,{name:"LD D, (HL)",cycleTime:8,operation:()=>{this.registers.loadByte(this.registers.D,this.registers.HL)}}),this.instructionMap.set(87,{name:"LD D, A",cycleTime:4,operation:()=>{this.registers.load(this.registers.D,this.registers.A)}}),this.instructionMap.set(88,{name:"LD E, B",cycleTime:4,operation:()=>{this.registers.load(this.registers.E,this.registers.B)}}),this.instructionMap.set(89,{name:"LD E, C",cycleTime:4,operation:()=>{this.registers.load(this.registers.E,this.registers.C)}}),this.instructionMap.set(90,{name:"LD E, D",cycleTime:4,operation:()=>{this.registers.load(this.registers.E,this.registers.D)}}),this.instructionMap.set(91,{name:"E, E",cycleTime:4,operation:()=>{this.registers.load(this.registers.E,this.registers.E)}}),this.instructionMap.set(92,{name:"LD E, H",cycleTime:4,operation:()=>{this.registers.load(this.registers.E,this.registers.H)}}),this.instructionMap.set(93,{name:"LD E, L",cycleTime:4,operation:()=>{this.registers.load(this.registers.E,this.registers.L)}}),this.instructionMap.set(94,{name:"LD E, (HL)",cycleTime:8,operation:()=>{this.registers.loadByte(this.registers.E,this.registers.HL)}}),this.instructionMap.set(95,{name:"LD E, A",cycleTime:4,operation:()=>{this.registers.load(this.registers.E,this.registers.A)}}),this.instructionMap.set(96,{name:"LD H, B",cycleTime:4,operation:()=>{this.registers.load(this.registers.H,this.registers.B)}}),this.instructionMap.set(97,{name:"LD H, C",cycleTime:4,operation:()=>{this.registers.load(this.registers.H,this.registers.C)}}),this.instructionMap.set(98,{name:"LD H, D",cycleTime:4,operation:()=>{this.registers.load(this.registers.H,this.registers.D)}}),this.instructionMap.set(99,{name:"LD H, E",cycleTime:4,operation:()=>{this.registers.load(this.registers.H,this.registers.E)}}),this.instructionMap.set(100,{name:"LD H, H",cycleTime:4,operation:()=>{this.registers.load(this.registers.H,this.registers.H)}}),this.instructionMap.set(101,{name:"LD H, L",cycleTime:4,operation:()=>{this.registers.load(this.registers.H,this.registers.L)}}),this.instructionMap.set(102,{name:"LD H, (HL)",cycleTime:8,operation:()=>{this.registers.loadByte(this.registers.H,this.registers.HL)}}),this.instructionMap.set(103,{name:"LD H, A",cycleTime:4,operation:()=>{this.registers.load(this.registers.H,this.registers.A)}}),this.instructionMap.set(104,{name:"LD L, B",cycleTime:4,operation:()=>{this.registers.load(this.registers.L,this.registers.B)}}),this.instructionMap.set(105,{name:"LD L, C",cycleTime:4,operation:()=>{this.registers.load(this.registers.L,this.registers.C)}}),this.instructionMap.set(106,{name:"LD L, D",cycleTime:4,operation:()=>{this.registers.load(this.registers.L,this.registers.D)}}),this.instructionMap.set(107,{name:"LD L, E",cycleTime:4,operation:()=>{this.registers.load(this.registers.L,this.registers.E)}}),this.instructionMap.set(108,{name:"LD L, H",cycleTime:4,operation:()=>{this.registers.load(this.registers.L,this.registers.H)}}),this.instructionMap.set(109,{name:"LD L, L",cycleTime:4,operation:()=>{this.registers.load(this.registers.L,this.registers.L)}}),this.instructionMap.set(110,{name:"LD L, (HL)",cycleTime:8,operation:()=>{this.registers.loadByte(this.registers.L,this.registers.HL)}}),this.instructionMap.set(111,{name:"LD L, A",cycleTime:4,operation:()=>{this.registers.load(this.registers.L,this.registers.A)}}),this.instructionMap.set(112,{name:"LD (HL), B",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddr(this.registers.HL,this.registers.B)}}),this.instructionMap.set(113,{name:"LD (HL) C",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddr(this.registers.HL,this.registers.C)}}),this.instructionMap.set(114,{name:"LD (HL), D",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddr(this.registers.HL,this.registers.D)}}),this.instructionMap.set(115,{name:"LD (HL), E",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddr(this.registers.HL,this.registers.E)}}),this.instructionMap.set(116,{name:"LD (HL), H",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddr(this.registers.HL,this.registers.H)}}),this.instructionMap.set(117,{name:"LD (HL), L",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddr(this.registers.HL,this.registers.L)}}),this.instructionMap.set(118,{name:"HALT",cycleTime:4,operation:()=>{this.isHalted=!0}}),this.instructionMap.set(119,{name:"LD (HL), A",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddr(this.registers.HL,this.registers.A)}}),this.instructionMap.set(120,{name:"LD A, B",cycleTime:4,operation:()=>{this.registers.load(this.registers.A,this.registers.B)}}),this.instructionMap.set(121,{name:"LD A, C",cycleTime:4,operation:()=>{this.registers.load(this.registers.A,this.registers.C)}}),this.instructionMap.set(122,{name:"LD A, D",cycleTime:4,operation:()=>{this.registers.load(this.registers.A,this.registers.D)}}),this.instructionMap.set(123,{name:"LD A, E",cycleTime:4,operation:()=>{this.registers.load(this.registers.A,this.registers.E)}}),this.instructionMap.set(124,{name:"LD A, H",cycleTime:4,operation:()=>{this.registers.load(this.registers.A,this.registers.H)}}),this.instructionMap.set(125,{name:"LD A, L",cycleTime:4,operation:()=>{this.registers.load(this.registers.A,this.registers.L)}}),this.instructionMap.set(126,{name:"LD A, (HL)",cycleTime:8,operation:()=>{this.registers.loadByte(this.registers.A,this.registers.HL)}}),this.instructionMap.set(127,{name:"LD A, A",cycleTime:4,operation:()=>{this.registers.load(this.registers.A,this.registers.A)}}),this.instructionMap.set(128,{name:"ADD A, B",cycleTime:4,operation:()=>{this.registers.add(this.registers.A,this.registers.B)}}),this.instructionMap.set(129,{name:"ADD A, C",cycleTime:4,operation:()=>{this.registers.add(this.registers.A,this.registers.C)}}),this.instructionMap.set(130,{name:"ADD A, D",cycleTime:4,operation:()=>{this.registers.add(this.registers.A,this.registers.D)}}),this.instructionMap.set(131,{name:"ADD A, E",cycleTime:4,operation:()=>{this.registers.add(this.registers.A,this.registers.E)}}),this.instructionMap.set(132,{name:"ADD A, H",cycleTime:4,operation:()=>{this.registers.add(this.registers.A,this.registers.H)}}),this.instructionMap.set(133,{name:"ADD A, L",cycleTime:4,operation:()=>{this.registers.add(this.registers.A,this.registers.L)}}),this.instructionMap.set(134,{name:"ADD A, (HL)",cycleTime:8,operation:()=>{this.registers.addFromRegisterAddr(this.registers.A,this.registers.HL)}}),this.instructionMap.set(135,{name:"ADD A, A",cycleTime:4,operation:()=>{this.registers.add(this.registers.A,this.registers.A)}}),this.instructionMap.set(136,{name:"ADC A, B",cycleTime:4,operation:()=>{this.registers.addWithCarry(this.registers.B)}}),this.instructionMap.set(137,{name:"ADC A, C",cycleTime:4,operation:()=>{this.registers.addWithCarry(this.registers.C)}}),this.instructionMap.set(138,{name:"ADC A, D",cycleTime:4,operation:()=>{this.registers.addWithCarry(this.registers.D)}}),this.instructionMap.set(139,{name:"ADC A, E",cycleTime:4,operation:()=>{this.registers.addWithCarry(this.registers.E)}}),this.instructionMap.set(140,{name:"ADC A, H",cycleTime:4,operation:()=>{this.registers.addWithCarry(this.registers.H)}}),this.instructionMap.set(141,{name:"ADC A, L",cycleTime:4,operation:()=>{this.registers.addWithCarry(this.registers.L)}}),this.instructionMap.set(142,{name:"ADC A, (HL)",cycleTime:8,operation:()=>{this.registers.addWithCarryFromMemory(this.registers.HL)}}),this.instructionMap.set(143,{name:"ADC A, A",cycleTime:4,operation:()=>{this.registers.addWithCarry(this.registers.A)}}),this.instructionMap.set(144,{name:"SUB B",cycleTime:4,operation:()=>{this.registers.subtract(this.registers.B)}}),this.instructionMap.set(145,{name:"SUB C",cycleTime:4,operation:()=>{this.registers.subtract(this.registers.C)}}),this.instructionMap.set(146,{name:"SUB D",cycleTime:4,operation:()=>{this.registers.subtract(this.registers.D)}}),this.instructionMap.set(147,{name:"SUB E",cycleTime:4,operation:()=>{this.registers.subtract(this.registers.E)}}),this.instructionMap.set(148,{name:"SUB H",cycleTime:4,operation:()=>{this.registers.subtract(this.registers.H)}}),this.instructionMap.set(149,{name:"SUB L",cycleTime:4,operation:()=>{this.registers.subtract(this.registers.L)}}),this.instructionMap.set(150,{name:"SUB (HL)",cycleTime:8,operation:()=>{this.registers.subtractFromMemory(this.registers.HL)}}),this.instructionMap.set(151,{name:"SUB A",cycleTime:4,operation:()=>{this.registers.subtract(this.registers.A)}}),this.instructionMap.set(152,{name:"SBC A, B",cycleTime:4,operation:()=>{this.registers.subtractWithCarry(this.registers.B)}}),this.instructionMap.set(153,{name:"SBC A, C",cycleTime:4,operation:()=>{this.registers.subtractWithCarry(this.registers.C)}}),this.instructionMap.set(154,{name:"SBC A, D",cycleTime:4,operation:()=>{this.registers.subtractWithCarry(this.registers.D)}}),this.instructionMap.set(155,{name:"SBC A, E",cycleTime:4,operation:()=>{this.registers.subtractWithCarry(this.registers.E)}}),this.instructionMap.set(156,{name:"SBC A, H",cycleTime:4,operation:()=>{this.registers.subtractWithCarry(this.registers.H)}}),this.instructionMap.set(157,{name:"SBC A, L",cycleTime:4,operation:()=>{this.registers.subtractWithCarry(this.registers.L)}}),this.instructionMap.set(158,{name:"SBC A, (HL)",cycleTime:8,operation:()=>{this.registers.subtractWithCarryFromMemory(this.registers.HL)}}),this.instructionMap.set(159,{name:"SBC A, A",cycleTime:4,operation:()=>{this.registers.subtractWithCarry(this.registers.A)}}),this.instructionMap.set(160,{name:"AND B",cycleTime:4,operation:()=>{this.registers.and(this.registers.B)}}),this.instructionMap.set(161,{name:"AND C",cycleTime:4,operation:()=>{this.registers.and(this.registers.C)}}),this.instructionMap.set(162,{name:"AND D",cycleTime:4,operation:()=>{this.registers.and(this.registers.D)}}),this.instructionMap.set(163,{name:"AND E",cycleTime:4,operation:()=>{this.registers.and(this.registers.E)}}),this.instructionMap.set(164,{name:"AND H",cycleTime:4,operation:()=>{this.registers.and(this.registers.H)}}),this.instructionMap.set(165,{name:"AND L",cycleTime:4,operation:()=>{this.registers.and(this.registers.L)}}),this.instructionMap.set(166,{name:"AND (HL)",cycleTime:8,operation:()=>{this.registers.andFromMemory(this.registers.HL)}}),this.instructionMap.set(167,{name:"AND A",cycleTime:4,operation:()=>{this.registers.and(this.registers.A)}}),this.instructionMap.set(168,{name:"XOR B",cycleTime:4,operation:()=>{this.registers.xor(this.registers.B)}}),this.instructionMap.set(169,{name:"XOR C",cycleTime:4,operation:()=>{this.registers.xor(this.registers.C)}}),this.instructionMap.set(170,{name:"XOR D",cycleTime:4,operation:()=>{this.registers.xor(this.registers.D)}}),this.instructionMap.set(171,{name:"XOR E",cycleTime:4,operation:()=>{this.registers.xor(this.registers.E)}}),this.instructionMap.set(172,{name:"XOR H",cycleTime:4,operation:()=>{this.registers.xor(this.registers.H)}}),this.instructionMap.set(173,{name:"XOR L",cycleTime:4,operation:()=>{this.registers.xor(this.registers.L)}}),this.instructionMap.set(174,{name:"XOR (HL)",cycleTime:8,operation:()=>{this.registers.xorFromMemory(this.registers.HL)}}),this.instructionMap.set(175,{name:"XOR A",cycleTime:4,operation:()=>{this.registers.xor(this.registers.A)}}),this.instructionMap.set(176,{name:"OR B",cycleTime:4,operation:()=>{this.registers.or(this.registers.B)}}),this.instructionMap.set(177,{name:"OR C",cycleTime:4,operation:()=>{this.registers.or(this.registers.C)}}),this.instructionMap.set(178,{name:"OR D",cycleTime:4,operation:()=>{this.registers.or(this.registers.D)}}),this.instructionMap.set(179,{name:"OR E",cycleTime:4,operation:()=>{this.registers.or(this.registers.E)}}),this.instructionMap.set(180,{name:"OR H",cycleTime:4,operation:()=>{this.registers.or(this.registers.H)}}),this.instructionMap.set(181,{name:"OR L",cycleTime:4,operation:()=>{this.registers.or(this.registers.L)}}),this.instructionMap.set(182,{name:"OR (HL)",cycleTime:8,operation:()=>{this.registers.orFromMemory(this.registers.HL)}}),this.instructionMap.set(183,{name:"OR A",cycleTime:4,operation:()=>{this.registers.or(this.registers.A)}}),this.instructionMap.set(184,{name:"CP B",cycleTime:4,operation:()=>{this.registers.compare(this.registers.B)}}),this.instructionMap.set(185,{name:"CP C",cycleTime:4,operation:()=>{this.registers.compare(this.registers.C)}}),this.instructionMap.set(186,{name:"CP D",cycleTime:4,operation:()=>{this.registers.compare(this.registers.D)}}),this.instructionMap.set(187,{name:"CP E",cycleTime:4,operation:()=>{this.registers.compare(this.registers.E)}}),this.instructionMap.set(188,{name:"CP H",cycleTime:4,operation:()=>{this.registers.compare(this.registers.H)}}),this.instructionMap.set(189,{name:"CP L",cycleTime:4,operation:()=>{this.registers.compare(this.registers.L)}}),this.instructionMap.set(190,{name:"CP (HL)",cycleTime:8,operation:()=>{this.registers.compareFromRegisterAddr(this.registers.HL)}}),this.instructionMap.set(191,{name:"CP A",cycleTime:4,operation:()=>{this.registers.compare(this.registers.A)}}),this.instructionMap.set(192,{name:"RET NZ",get cycleTime(){return t.F.zero?8:20},operation:()=>{this.registers.returnFromFunctionIfNotZero()}}),this.instructionMap.set(193,{name:"POP BC",cycleTime:12,operation:()=>{this.registers.popToRegister(this.registers.BC)}}),this.instructionMap.set(194,{get name(){return`JP NZ, 0x${r.readWord(t.PC.value).toString(16)}`},get cycleTime(){return t.F.zero?12:16},operation:()=>{this.registers.jumpIfNotZero()}}),this.instructionMap.set(195,{get name(){return`JP 0x${r.readWord(t.PC.value).toString(16)}`},cycleTime:16,operation:()=>{this.registers.jump()}}),this.instructionMap.set(196,{get name(){return`CALL NZ, 0x${r.readWord(t.PC.value).toString(16)}`},get cycleTime(){return t.F.zero?12:24},operation:()=>{this.registers.callFunctionIfNotZero()}}),this.instructionMap.set(197,{name:"PUSH BC",cycleTime:16,operation:()=>{this.registers.pushFromRegister(this.registers.BC)}}),this.instructionMap.set(198,{get name(){return`ADD A, 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.addImmediate(this.registers.A)}}),this.instructionMap.set(199,{name:"RST 00H",cycleTime:16,operation:()=>{this.registers.restart(0)}}),this.instructionMap.set(200,{name:"RET Z",get cycleTime(){return t.F.zero?20:8},operation:()=>{this.registers.returnFromFunctionIfZero()}}),this.instructionMap.set(201,{name:"RET",cycleTime:16,operation:()=>{this.registers.returnFromFunction()}}),this.instructionMap.set(202,{get name(){return`JP Z, 0x${r.readWord(t.PC.value).toString(16)}`},get cycleTime(){return t.F.zero?16:12},operation:()=>{this.registers.jumpIfZero()}}),this.instructionMap.set(203,{name:"PREFIX CB",cycleTime:0,operation:()=>{}}),this.instructionMap.set(204,{get name(){return`CALL Z, 0x${r.readWord(t.PC.value).toString(16)}`},get cycleTime(){return t.F.zero?24:12},operation:()=>{this.registers.callFunctionIfZero()}}),this.instructionMap.set(205,{get name(){return`CALL 0x${r.readWord(t.PC.value).toString(16)}`},cycleTime:24,operation:()=>{this.registers.callFunction()}}),this.instructionMap.set(206,{get name(){return`ADC A, 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.addWithCarryImmediate()}}),this.instructionMap.set(207,{name:"RST 08H",cycleTime:16,operation:()=>{this.registers.restart(8)}}),this.instructionMap.set(208,{name:"RET NC",get cycleTime(){return t.F.carry?8:20},operation:()=>{this.registers.returnFromFunctionIfNotCarry()}}),this.instructionMap.set(209,{name:"POP DE",cycleTime:12,operation:()=>{this.registers.popToRegister(this.registers.DE)}}),this.instructionMap.set(210,{get name(){return`JP NC 0x${r.readWord(t.PC.value).toString(16)}`},get cycleTime(){return t.F.carry?12:16},operation:()=>{this.registers.jumpIfNotCarry()}}),this.instructionMap.set(212,{get name(){return`CALL NC, 0x${r.readWord(t.PC.value).toString(16)}`},get cycleTime(){return t.F.carry?12:24},operation:()=>{this.registers.callFunctionIfNotCarry()}}),this.instructionMap.set(213,{name:"PUSH DE",cycleTime:16,operation:()=>{this.registers.pushFromRegister(this.registers.DE)}}),this.instructionMap.set(214,{get name(){return`SUB 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.subtractImmediate()}}),this.instructionMap.set(215,{name:"RST 10H",cycleTime:16,operation:()=>{this.registers.restart(16)}}),this.instructionMap.set(216,{name:"RET C",get cycleTime(){return t.F.carry?20:8},operation:()=>{this.registers.returnFromFunctionIfCarry()}}),this.instructionMap.set(217,{name:"RETI",cycleTime:16,operation:()=>{this.registers.returnFromFunction(),this.interruptMasterEnabled=!0}}),this.instructionMap.set(218,{get name(){return`JP C, 0x${r.readWord(t.PC.value).toString(16)}`},get cycleTime(){return t.F.carry?16:12},operation:()=>{this.registers.jumpIfCarry()}}),this.instructionMap.set(220,{get name(){return`CALL C, 0x${r.readWord(t.PC.value).toString(16)}`},get cycleTime(){return t.F.carry?24:12},operation:()=>{this.registers.callFunctionIfCarry()}}),this.instructionMap.set(222,{get name(){return`SBC A, ${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.subtractWithCarryImmediate()}}),this.instructionMap.set(223,{name:"RST 18H",cycleTime:16,operation:()=>{this.registers.restart(24)}}),this.instructionMap.set(224,{get name(){return`LDH (0xff00 + 0x${r.readByte(t.PC.value).toString(16)}), A`},cycleTime:0,operation:()=>{this.registers.writeToMemory8Bit(this.registers.A)}}),this.instructionMap.set(225,{name:"POP HL",cycleTime:12,operation:()=>{this.registers.popToRegister(this.registers.HL)}}),this.instructionMap.set(226,{name:"LDH (C), A",cycleTime:8,operation:()=>{this.registers.writeToMemoryRegisterAddr8bit(this.registers.C,this.registers.A)}}),this.instructionMap.set(229,{name:"PUSH HL",cycleTime:16,operation:()=>{this.registers.pushFromRegister(this.registers.HL)}}),this.instructionMap.set(230,{get name(){return`AND 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.andImmediate()}}),this.instructionMap.set(231,{name:"RST 20H",cycleTime:16,operation:()=>{this.registers.restart(32)}}),this.instructionMap.set(232,{get name(){return`ADD SP, 0x${r.readSignedByte(t.PC.value).toString(16)}`},cycleTime:16,operation:()=>{this.registers.addImmediateSigned(this.registers.SP)}}),this.instructionMap.set(233,{name:"JP (HL)",cycleTime:4,operation:()=>{this.registers.jumpToRegisterAddr()}}),this.instructionMap.set(234,{get name(){return`LD (${r.readWord(t.PC.value).toString(16)}), A`},cycleTime:0,operation:()=>{this.registers.writeToMemory16bit(this.registers.A)}}),this.instructionMap.set(238,{get name(){return`XOR 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.xorImmediate()}}),this.instructionMap.set(239,{name:"RST 28H",cycleTime:16,operation:()=>{this.registers.restart(40)}}),this.instructionMap.set(240,{get name(){return`LDH A, (0x${r.readByte(t.PC.value).toString(16)})`},cycleTime:0,operation:()=>{this.registers.loadFromBase(this.registers.A)}}),this.instructionMap.set(241,{name:"POP AF",cycleTime:12,operation:()=>{this.registers.popToRegister(this.registers.AF)}}),this.instructionMap.set(242,{name:"LD A, (C)",cycleTime:8,operation:()=>{this.registers.loadByte8Bit(this.registers.A,this.registers.C)}}),this.instructionMap.set(243,{name:"DI",cycleTime:4,operation:()=>{this.interruptMasterEnabled=!1}}),this.instructionMap.set(245,{name:"PUSH AF",cycleTime:16,operation:()=>{this.registers.pushFromRegister(this.registers.AF)}}),this.instructionMap.set(246,{get name(){return`OR ${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.orImmediate()}}),this.instructionMap.set(247,{name:"RST 30H",cycleTime:16,operation:()=>{this.registers.restart(48)}}),this.instructionMap.set(248,{get name(){return`LD HL, SP + 0x${r.readSignedByte(t.PC.value).toString(16)}`},cycleTime:12,operation:()=>{this.registers.loadHLStackPointer()}}),this.instructionMap.set(249,{name:"LD SP, HL",cycleTime:8,operation:()=>{this.registers.load(this.registers.SP,this.registers.HL)}}),this.instructionMap.set(250,{get name(){return`LD A, (0x${r.readWord(t.PC.value).toString(16)})`},cycleTime:0,operation:()=>{this.registers.loadFrom16bitAddr(this.registers.A)}}),this.instructionMap.set(251,{name:"EI",cycleTime:4,operation:()=>{this.interruptMasterEnabled=!0}}),this.instructionMap.set(254,{get name(){return`CP 0x${r.readByte(t.PC.value).toString(16)}`},cycleTime:8,operation:()=>{this.registers.compareImmediate()}}),this.instructionMap.set(255,{name:"RST 38H",cycleTime:16,operation:()=>{this.registers.restart(56)}})}s.setInstructionMap=o}),define("cpu/CPU",["require","exports","Gameboy","misc/BitOperations","cpu/CPURegisters","cpu/setCbMap","cpu/setInstructionMap"],function(f,s,o,t,r,n,i){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.CPU=void 0;const g=64,c=72,l=80,d=88,y=96;class e{memory;registers;isStopped=!1;isHalted=!1;interruptMasterEnabled=!0;setInstructionMap=i.setInstructionMap;setCbMap=n.setCbMap;instructionMap=new Map;cbMap=new Map;counter=0;timerCycles=0;isDoubleSpeed=!1;gpu;apu;constructor(h,p,E){this.registers=new r.CPURegisters(h,this),this.memory=h,this.gpu=p,this.apu=E,this.setInstructionMap(),this.setCbMap()}loadCartridge(h){const p=new DataView(h),E=this.memory.loadCartridge(p);return this.initialize(),E}initialize(){this.memory.reset(),this.registers.initialize(),o.Gameboy.frames=0}updateTimers(h){const{timerControlRegister:p,dividerRegister:E,timerCounterRegister:R,interruptRequestRegister:b,timerModuloRegister:C}=this.registers;this.counter=this.counter+h&65535;const u=this.counter>>8&255;if(E.overrideValue=u,!!p.isTimerEnabled())for(this.timerCycles+=h;this.timerCycles>=p.getClockFrequency();)this.timerCycles-=p.getClockFrequency(),R.value===255?(b.triggerTimerRequest(),R.value=C.value):R.value++}checkInterrupts(){const{interruptRequestRegister:h,interruptEnableRegister:p}=this.registers;(p.value&h.value)>0&&(this.isHalted=!1),this.interruptMasterEnabled&&(p.isVBlankInterruptEnabled()&&h.vBlankInterruptRequest()?(h.clearVBlankRequest(),this.registers.pushToStack(this.registers.PC.value),this.registers.PC.value=g,this.interruptMasterEnabled=!1):p.isLCDStatInterruptEnabled()&&h.lcdStatInterruptRequest()?(this.registers.pushToStack(this.registers.PC.value),h.clearLcdStatRequest(),this.registers.PC.value=c,this.interruptMasterEnabled=!1):p.isTimerInterruptEnabled()&&h.timerInterruptRequest()?(this.registers.pushToStack(this.registers.PC.value),h.clearTimerRequest(),this.registers.PC.value=l,this.interruptMasterEnabled=!1):p.isSerialInterruptEnabled()&&h.serialInterruptRequest()?(this.registers.pushToStack(this.registers.PC.value),h.clearSerialRequest(),this.registers.PC.value=d,this.interruptMasterEnabled=!1):p.isJoypadInterruptEnabled()&&h.joypadInterruptRequest()&&(this.registers.pushToStack(this.registers.PC.value),h.clearJoypadRequest(),this.registers.PC.value=y,this.interruptMasterEnabled=!1))}checkIfDoubleSpeed(){const h=this.memory.readByte(65357);(0,t.getBit)(h,7)===1?this.isDoubleSpeed=!0:this.isDoubleSpeed=!1}performCbInstruction(){const h=this.memory.readByte(this.registers.PC.value),p=this.cbMap.get(h);if(p==null)throw new Error(`Invalid CB op code: 0x${h.toString(16)}`);const E=this.registers.PC.hexValue;return this.registers.PC.value++,o.Gameboy.shouldOutputLogs&&console.log(`found instruction ${p.name} with code 0x${h.toString(16)} at address ${E}`),p.operation(),p.cycleTime}tick(){try{const h=this.memory.readByte(this.registers.PC.value),p=this.instructionMap.get(h);if(p!=null){const E=this.registers.PC.hexValue;this.registers.PC.value++,o.Gameboy.shouldOutputLogs&&console.log(`found instruction ${p.name} with code 0x${h.toString(16)} at address ${E}`),p.operation();let R=p.cycleTime;return p.name==="PREFIX CB"&&this.performCbInstruction(),this.isDoubleSpeed&&(R=R/2),R}else throw new Error(`invalid instruction code: 0x${h.toString(16).toUpperCase()}`)}catch(h){throw console.log(`execution failed at frame ${o.Gameboy.frames}`),h}}cycle(h){this.updateTimers(h),this.gpu.tick(h),this.apu.tick(h)}step(){if(this.checkInterrupts(),this.checkIfDoubleSpeed(),this.isHalted)return this.cycle(4),4;const h=this.tick();return h!==0&&this.cycle(h),h}}s.CPU=e}),define("joypad/Joypad",["require","exports","cpu/memory_registers/JoypadRegister"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Joypad=void 0;var t;(function(n){n[n.A=0]="A",n[n.B=1]="B",n[n.X=2]="X",n[n.Y=3]="Y",n[n.LB=4]="LB",n[n.RB=5]="RB",n[n.LT=6]="LT",n[n.RT=7]="RT",n[n.Select=8]="Select",n[n.Start=9]="Start",n[n.L3=10]="L3",n[n.R3=11]="R3",n[n.Up=12]="Up",n[n.Down=13]="Down",n[n.Left=14]="Left",n[n.Right=15]="Right"})(t||(t={}));class r{gamepad;constructor(i){this.gamepad=i}static isUpKeyPressed=!1;static isDownKeyPressed=!1;static isRightKeyPressed=!1;static isLeftKeyPressed=!1;static isEnterKeyPressed=!1;static isShiftKeyPressed=!1;static isSKeyPressed=!1;static isAKeyPressed=!1;static handleInput(){const i=navigator.getGamepads()[0],g=new r(i);o.joypadRegister.isPressingLeft=g.isPressingLeft(),o.joypadRegister.isPressingRight=g.isPressingRight(),o.joypadRegister.isPressingDown=g.isPressingDown(),o.joypadRegister.isPressingUp=g.isPressingUp(),o.joypadRegister.isPressingA=g.isPressingA(),o.joypadRegister.isPressingB=g.isPressingB(),o.joypadRegister.isPressingSelect=g.isPressingSelect(),o.joypadRegister.isPressingStart=g.isPressingStart()}isPressingLeft(){const i=this.gamepad?.axes[0]||0;return this.gamepad?.buttons[t.Left].pressed||i<-.1||r.isLeftKeyPressed}isPressingRight(){const i=this.gamepad?.axes[0]||0;return this.gamepad?.buttons[t.Right]?.pressed||i>.1||r.isRightKeyPressed}isPressingUp(){const i=this.gamepad?.axes[1]||0;return this.gamepad?.buttons[t.Up].pressed||i<-.1||r.isUpKeyPressed}isPressingDown(){const i=this.gamepad?.axes[1]||0;return this.gamepad?.buttons[t.Down].pressed||i>.1||r.isDownKeyPressed}isPressingA(){return this.gamepad?.buttons[t.A].pressed||r.isSKeyPressed}isPressingB(){return this.gamepad?.buttons[t.X].pressed||r.isAKeyPressed}isPressingStart(){return this.gamepad?.buttons[t.Start].pressed||r.isEnterKeyPressed}isPressingSelect(){return this.gamepad?.buttons[t.Select].pressed||r.isShiftKeyPressed}}s.Joypad=r}),define("Gameboy",["require","exports","apu/APU","cpu/CPU","cpu/Memory","gpu/GPU","joypad/Joypad"],function(f,s,o,t,r,n,i){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.Gameboy=void 0;const g=new r.Memory,l=1e3/60;class d{gpu=new n.GPU(g);cpu=new t.CPU(g,this.gpu,new o.APU(g));fps=0;cycles=0;previousTime=0;static frames=0;static shouldOutputLogs=!1;isRunning=!0;loadCartridge(e){const a=this.cpu.loadCartridge(e);this.gpu.isGBC=a}run(){const e=document.querySelector("canvas")?.getContext("2d");if(this.initializeKeyboardInputs(),e!=null)requestAnimationFrame(a=>this.execute(a,e));else throw new Error("canvas context is null!")}initializeKeyboardInputs(){document.addEventListener("keyup",e=>{switch(e.preventDefault(),e.key){case"ArrowDown":i.Joypad.isDownKeyPressed=!1;break;case"ArrowUp":i.Joypad.isUpKeyPressed=!1;break;case"ArrowLeft":i.Joypad.isLeftKeyPressed=!1;break;case"ArrowRight":i.Joypad.isRightKeyPressed=!1;break;case"Enter":i.Joypad.isEnterKeyPressed=!1;break;case"Shift":i.Joypad.isShiftKeyPressed=!1;break;case"s":i.Joypad.isSKeyPressed=!1;break;case"a":i.Joypad.isAKeyPressed=!1;break}}),document.addEventListener("keydown",e=>{switch(e.preventDefault(),e.key){case"ArrowDown":i.Joypad.isDownKeyPressed=!0;break;case"ArrowUp":i.Joypad.isUpKeyPressed=!0;break;case"ArrowLeft":i.Joypad.isLeftKeyPressed=!0;break;case"ArrowRight":i.Joypad.isRightKeyPressed=!0;break;case"Enter":i.Joypad.isEnterKeyPressed=!0;break;case"Shift":i.Joypad.isShiftKeyPressed=!0;break;case"s":i.Joypad.isSKeyPressed=!0;break;case"a":i.Joypad.isAKeyPressed=!0;break}})}execute(e,a){const h=e-this.previousTime;if(h>=l||this.previousTime===0){for(this.fps=1e3/h,this.previousTime=e-h%l;this.cycles<=n.GPU.CyclesPerFrame;)this.cycles+=this.cpu.step();i.Joypad.handleInput(),a.putImageData(this.gpu.screen,0,0),d.frames++,this.cycles%=n.GPU.CyclesPerFrame}this.isRunning&&requestAnimationFrame(p=>this.execute(p,a))}}s.Gameboy=d}),define("main",["require","exports","Gameboy"],function(f,s,o){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),document.getElementById("rom-input")?.addEventListener("change",y=>{n(y)});let r=null;async function n(y){r=new o.Gameboy;const e=y.target?.files;if(e!=null){const a=e[0];let h=await d(a);h!=null&&(r.loadCartridge(h),r.run())}}function i(){document.getElementById("rom-input")?.click()}function g(){document.documentElement.requestFullscreen()}function c(){const y=document.getElementById("modal");y!=null&&(y.style.display="block")}function l(){const y=document.getElementById("modal");y!=null&&(y.style.display="none")}function d(y){const e=new FileReader;return new Promise((a,h)=>{e.onload=()=>a(e.result),e.onerror=()=>{e.abort(),h(new Error("Error parsing file"))},e.readAsArrayBuffer(y)})}}),define("apu/channels/StereoChannel",["require","exports"],function(f,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.StereoChannel=void 0;var o;(function(t){t[t.Left=0]="Left",t[t.Right=1]="Right"})(o||(s.StereoChannel=o={}))});
